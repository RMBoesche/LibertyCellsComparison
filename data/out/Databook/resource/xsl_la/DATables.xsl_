<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://www.pnp-software.com/XSLTdoc">
  
  <xd:doc type="stylesheet">
    <xd:copyright>&#169; 1984-2024 Silvaco, Inc. All rights reserved.</xd:copyright>
    <xd:MyProperty>
      <xd:MyCaption>Copyright Notice:</xd:MyCaption>
      <xd:MyLine>This document contains confidential and proprietary information.</xd:MyLine>
      <xd:MyLine>Reproduction or usage of this document, in part or whole, by any means, electrical, mechanical, optical, chemical or otherwise is prohibited, without written permission from Silvaco, Inc.</xd:MyLine>
      <xd:MyLine>The information contained herein is protected by U.S. and international copyright laws.</xd:MyLine>
    </xd:MyProperty>
  </xd:doc>
  
  <xsl:include href="NavigationBar.xsl"/>

  <!-- Design Audit Processment -->
  <xd:doc>Redirects Design Audit data to be processed by the proper template</xd:doc>
  <xsl:template match="DesignAudit">
    <xsl:call-template name="BuildTable"/>
  </xsl:template>
  

    
  <!-- Table processment -->
  <xd:doc>Builds the table page. Calls the appropriate templates to build each section of the page</xd:doc>
  <xsl:template name="BuildTable">
    
    <xsl:variable name="Title">
      <xsl:value-of select="/*/@CriticalPathName"/>
    </xsl:variable>
    
    <html>
      <head>
        <title>
          <xsl:value-of select="$Title"/>
        </title>
        <xsl:call-template name="Includes"/>
      </head>
      <body onLoad="NanInit();">

        <a id="PageInfo">
          <xsl:attribute name="RootPath"><xsl:value-of select="$RootPath"/></xsl:attribute>
          <xsl:attribute name="CellPath"><xsl:value-of select="'Cells/'"/></xsl:attribute>
          <xsl:attribute name="Corner"><xsl:value-of select="$Corner"/></xsl:attribute>
          <xsl:attribute name="FileExt"><xsl:value-of select="$Extensions/Cell"/></xsl:attribute>
          <xsl:attribute name="MultiLib"><xsl:value-of select="/*/@multi_lib"/></xsl:attribute>
        </a>
        
        <xsl:call-template name="SilvacoHeader">
          <xsl:with-param name="dir"   select="'.'"/>
          <xsl:with-param name="Title"  select="$Title"/>
        </xsl:call-template>

        <!-- top navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar">
          <xsl:with-param name="PrevName"/>
          <xsl:with-param name="NextName"/>
        </xsl:call-template>

        <xsl:call-template name="DATables"/>        
       
        <xsl:call-template name="DANotes"/>
        <!-- Bottom navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar">
          <xsl:with-param name="Pos">Bottom</xsl:with-param>
          <xsl:with-param name="PrevName"/>
          <xsl:with-param name="NextName"/>
        </xsl:call-template>
       
      </body>
    </html>
    
  </xsl:template>

  <!-- Generate Tables -->
  <xd:doc>Generates the delay and transition tables</xd:doc>
  <xsl:template name="DATables">
    <xsl:for-each select="DelayTable">
      <a name="DelayTable">
        <xsl:call-template name="CreateCollapse">
          <xsl:with-param name="name">Delay Table</xsl:with-param>
          <xsl:with-param name="tag">DelayTable</xsl:with-param>
          <xsl:with-param name="dir">.</xsl:with-param>
        </xsl:call-template>      
        <span id="_DelayTable">
          <div>
            <xsl:call-template name="DATablesContent">
              <xsl:with-param name="TableType">Delay</xsl:with-param>
            </xsl:call-template>
          </div>
        </span>
      </a>
    </xsl:for-each>
    <xsl:for-each select="SlewTable">
      <a name="SlewTable">
        <xsl:call-template name="CreateCollapse">
          <xsl:with-param name="name">Slew Table</xsl:with-param>
          <xsl:with-param name="tag">SlewTable</xsl:with-param>
          <xsl:with-param name="dir">.</xsl:with-param>
        </xsl:call-template>
        <span id="_SlewTable">
          <div>
            <xsl:call-template name="DATablesContent">
              <xsl:with-param name="TableType">Slew</xsl:with-param>
            </xsl:call-template>
          </div>
        </span>
      </a>
    </xsl:for-each>
  </xsl:template>


  <!-- Generate DA Table Content -->
  <xd:doc>Generates the content delay and transition tables</xd:doc>
  <xsl:template name="DATablesContent">
    <xsl:param name="TableType"/>
    <xsl:attribute name="ngTable">DATable</xsl:attribute>
    <xsl:attribute name="DATable"><xsl:value-of select="$TableType"/></xsl:attribute>
    <xsl:variable name="entries">
      <xsl:for-each select="Entry">
        <xsl:value-of select="@InstanceType"/>;
        <xsl:value-of select="@isUserDefined"/>;
        <xsl:value-of select="@InstanceName"/>;
        <xsl:value-of select="@sta"/>;
        <xsl:value-of select="@spice"/>;
<!--         <xsl:value-of select="@deviation"/><xsl:if test="@tolExceeded='down'">d</xsl:if><xsl:if test="@tolExceeded='up'">u</xsl:if><xsl:value-of select="@highlightType"/>;$ -->
        <xsl:value-of select="@deviation"/><xsl:if test="@tolExceeded">u</xsl:if>$
      </xsl:for-each>
    </xsl:variable>
    <xsl:attribute name="entries"><xsl:value-of select="translate(normalize-space($entries),' ','')"/></xsl:attribute>    
  </xsl:template>
  
  <!-- Generate notes -->
  <xd:doc>Generates the informations that appear at the bottom of the page</xd:doc>
  <xsl:template name="DANotes">
    <a name="Notes">
      <xsl:call-template name="CreateCollapse">
        <xsl:with-param name="name">Notes</xsl:with-param>
        <xsl:with-param name="dir">.</xsl:with-param>
      </xsl:call-template>
      
      <span id="_Notes">
        <ul>
          <li>
            <b>STA Tool:</b> <xsl:value-of select="/*/@staTool"/>&#8482;; version <xsl:value-of select="/*/@staVersion"/>
          </li>
          <li>
            <b>Spice Engine:</b> <xsl:value-of select="/*/@spiceTool"/>&#8482;; version <xsl:value-of select="/*/@spiceVersion"/>
          </li>
          <li>
            <b>Audit Tool:</b> <xsl:value-of select="/*/@auditTool"/>&#8482;; version <xsl:value-of select="/*/@auditVersion"/>
          </li>
        </ul>
      </span>
    </a>
  </xsl:template>

  
  
</xsl:stylesheet>
