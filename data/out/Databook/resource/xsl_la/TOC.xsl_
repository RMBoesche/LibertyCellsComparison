<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://www.pnp-software.com/XSLTdoc">
  
  <xd:doc type="stylesheet">
    <xd:copyright>&#169; 1984-2024 Silvaco, Inc. All rights reserved.</xd:copyright>
    <xd:MyProperty>
      <xd:MyCaption>Copyright Notice:</xd:MyCaption>
      <xd:MyLine>This document contains confidential and proprietary information.</xd:MyLine>
      <xd:MyLine>Reproduction or usage of this document, in part or whole, by any means, electrical, mechanical, optical, chemical or otherwise is prohibited, without written permission from Silvaco, Inc.</xd:MyLine>
      <xd:MyLine>The information contained herein is protected by U.S. and international copyright laws.</xd:MyLine>
    </xd:MyProperty>
  </xd:doc>
  
  <xsl:include href="NavigationBar.xsl"/>

  <!-- Starting from the root -->
  <xd:doc>Creates the main page of the databook, processing each corner</xd:doc>
  <xsl:template match="CornerList">
    
    <xsl:variable name="Title" select="concat(LibraryName, ' Library Databook')"/>
    
    <html>
      <head>
        <title>
          <xsl:value-of select="$Title"/>
        </title>
        <xsl:call-template name="Includes"/>
      </head>
      <body>
        
        <xsl:call-template name="SilvacoHeader">
          <xsl:with-param name="dir">.</xsl:with-param>
          <xsl:with-param name="Title"><xsl:value-of select="$Title"/></xsl:with-param>
        </xsl:call-template>
        
        <hr/>
        
        <table class="navigation">
          <tr><td><p class="Title_no_sp">Silvaco, Inc.</p></td></tr>
          <tr><td>Copyright <xsl:text>©</xsl:text> 1984-2024 Silvaco, Inc. All rights reserved.</td></tr>
          <tr><td>Build Date: <xsl:value-of select="Date"/></td></tr>
        </table>
        
        <hr/>
        <p class="Title">Contents</p>
        <hr class="Title"/>
        
        <ul class="TOC1">
          <xsl:for-each select="Corner">

            <xsl:variable name="alias"><xsl:value-of select="@Alias"/></xsl:variable>
            <xsl:variable name="lib_alias">
              <xsl:if test="$alias!=''"><xsl:if test="$alias!=$AbsDeviation and $alias!=$RelDeviation">Library </xsl:if><xsl:value-of select="$alias"/></xsl:if>
            </xsl:variable>

            <xsl:variable name="corner"><xsl:value-of select="@CornerName"/></xsl:variable>
            <xsl:variable name="lib_corner">
              <xsl:if test="$corner!=''">Corner <xsl:value-of select="$corner"/></xsl:if>
            </xsl:variable>
            
            <xsl:variable name="CTitle">
              <xsl:choose>
                <xsl:when test="substring(@CornerName,1,9)=$NoCorner">
                  <xsl:value-of select="concat($Title, ' [', @CornerName, ']')"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$lib_alias"/>
                  <xsl:if test="$lib_alias!='' and $lib_corner!=''">, </xsl:if>
                  <xsl:value-of select="$lib_corner"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            
            <li>
              
              <a>
                
                <xsl:if test="$DocType='PDF'">
                  <xsl:attribute name="href">
                    <xsl:value-of select="concat('Corner [', @CornerName, ']')"/>
                  </xsl:attribute>
                </xsl:if>
                
                <xsl:call-template name="CreateCollapse">
                  <xsl:with-param name="name" select="$CTitle"/>
                  <xsl:with-param name="tag"  select="@Name"/>
                  <xsl:with-param name="dir">.</xsl:with-param>
                </xsl:call-template>
                
              </a>
              
              <span>
                <xsl:attribute name="id">_<xsl:value-of select="@Name"/></xsl:attribute>
                <xsl:apply-templates select="document(concat('../../', @File))"/>
              </span>
              
            </li>
            
          </xsl:for-each>
        </ul>
        
        <br/> 
        <hr/>
        
        <table class="navigation">
          <tr><td><p class="Title_no_sp">Silvaco, Inc.</p></td></tr>
          <tr><td>Copyright <xsl:text>©</xsl:text> 1984-2024 Silvaco, Inc. All rights reserved.</td></tr>
          <tr><td>Build Date: <xsl:value-of select="Date"/></td></tr>
        </table>
        
        <hr/>
        
      </body>
    </html>
    
  </xsl:template>
  
  
  
  <!-- Creating TOC related to a library xml: profiling pages, power summary, timing summary and cells -->
  <xd:doc>Creates the Table of Contents for a single corner</xd:doc>
  <xsl:template match="Library">
    
    <!--<xsl:variable name="CornerSuffix">
        <xsl:choose>
        <xsl:when test="@CornerName=$NoCorner"/>
        <xsl:otherwise>
        <xsl:value-of select="concat(' [',@CornerName,']')"/>
        </xsl:otherwise>
        </xsl:choose>
        </xsl:variable>-->
    
    <ul class="TOC2">
      
      <xsl:if test="$Config/@doctype!='PDF'">
        <xsl:if test="@PerfPlot">
          <xsl:choose>
            <xsl:when test="@CornerName=$AbsDeviation or @CornerName=$RelDeviation or @CornerName='Best' or @CornerName='Worst'">
              <a>
                <xsl:call-template name="CreateCollapse">
                  <xsl:with-param name="name" select="'Performance'"/>
                  <xsl:with-param name="tag" select="concat('Performance_',@CornerName)"/>
                  <xsl:with-param name="hide">true</xsl:with-param>
                </xsl:call-template>
              </a>
              <span class="hiddenBranch">
                <xsl:attribute name="id">
                  <xsl:value-of select="concat('_Performance_',@CornerName)"/>
                </xsl:attribute>
                <xsl:attribute name="hide">true</xsl:attribute>

                <table class="splitPage">
                  <tr>
                    <td class="splitPage">
                <img>
                  <xsl:attribute name ="src">
                    <xsl:value-of select="@PerfPlot"/>
                  </xsl:attribute>
                </img>
                    </td>
                    <td class="splitPage">

                <xsl:variable name="listfile" select="document('../../CornerList.xml')/CornerList"/>
                <xsl:variable name="imgpath" select="$listfile/PerfPlot"/>
                <img>
                  <xsl:attribute name ="src">
                    <xsl:value-of select="$imgpath"/>
                  </xsl:attribute>
                </img>
                    </td>
                  </tr>
                </table>
              </span>

            </xsl:when>
            <xsl:otherwise>
              <a>
                <xsl:call-template name="CreateCollapse">
                  <xsl:with-param name="name" select="'Performance'"/>
                  <xsl:with-param name="tag" select="concat('Performance_',@CornerName)"/>
                  <xsl:with-param name="hide">true</xsl:with-param>
                </xsl:call-template>
              </a>
              <span class="hiddenBranch">
                <xsl:attribute name="id">
                  <xsl:value-of select="concat('_Performance_',@CornerName)"/>
                </xsl:attribute>
                <xsl:attribute name="hide">true</xsl:attribute>
                <img>
                  <xsl:attribute name ="src">
                    <xsl:value-of select="@PerfPlot"/>
                  </xsl:attribute>
                </img>
              </span>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:if>
      </xsl:if>

      <xsl:if test="DesignAudit/Entry">
        <li>
          <a>
           
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'STA vs Spice'"/>
              <xsl:with-param name="tag"  select="concat('DA_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
              <xsl:with-param name="hide">true</xsl:with-param>
            </xsl:call-template>
          </a>
          
          <span class="hiddenBranch">
            <xsl:attribute name="id">
              <xsl:value-of select="concat('_DA_', @CornerName)"/>
            </xsl:attribute>

            <xsl:attribute name="hide">true</xsl:attribute>
            
            <ul class="TOC3">
              
              <xsl:for-each select="DesignAudit/Entry">
                <li>
                  <xsl:element name="a">
                    <xsl:attribute name="href">
                      <xsl:value-of select="@Link"/><xsl:value-of select="$Extensions/Summary"/>
                    </xsl:attribute>
                    <xsl:value-of select="@Name"/>
                  </xsl:element>
                </li>
              </xsl:for-each>
              
            </ul>
          </span>
          
        </li>
      </xsl:if>


      <xsl:if test="QoRSummary/Entry">
        <li>
          <a>
            <xsl:if test="$Config/@doctype='PDF'">
              <xsl:attribute name="href">
                <xsl:value-of select="concat('QoR [', @CornerName, ']')"/>
              </xsl:attribute>
            </xsl:if>
            
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'QoR'"/>
              <xsl:with-param name="tag"  select="concat('CQS_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
              <xsl:with-param name="hide">true</xsl:with-param>
            </xsl:call-template>
          </a>
          
          <span class="hiddenBranch">
            <xsl:attribute name="id">
              <xsl:value-of select="concat('_CQS_', @CornerName)"/>
            </xsl:attribute>

            <xsl:attribute name="hide">true</xsl:attribute>
            
            <ul class="TOC3">
              
              <xsl:for-each select="QoRSummary/Entry">
                <li>
                  <xsl:element name="a">
                    
                    <xsl:variable name="name">
                      <xsl:call-template name="Map">
                        <xsl:with-param name="map" select="$MapNode/summary"/>
                        <xsl:with-param name="key" select="concat(@Alias, @Name,'_Title')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    
                    <xsl:choose>
                      <xsl:when test="$Config/@doctype='PDF'">
                        <xsl:attribute name="href">
                          <xsl:value-of select="concat($name, ' [', /Library/@CornerName, ']')"/>
                        </xsl:attribute>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:attribute name="href">
                          <xsl:value-of select="@Link"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Summary"/>
                        </xsl:attribute>
                      </xsl:otherwise>
                    </xsl:choose>
                    
                    <xsl:value-of select="$name"/>
                    <!--<xsl:value-of select="$CornerSuffix"/>-->
                    
                  </xsl:element>
                   
                   <!--Corner Information -->
                   <xsl:variable name="SecLegend">
                   <xsl:value-of select="../../@CornerName"/>
                  </xsl:variable>
                  <!--Analysis Focus -->
                   <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$SecLegend]"/>
                  
                   <xsl:variable name="Legend">
                     <xsl:choose>  
                       <xsl:when test="$CornerNode/@Focus = $FocusCorr">
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/correlation"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:when>
                       <xsl:otherwise> 
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/summary"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:otherwise> 
                     </xsl:choose> 
                   </xsl:variable>
                  
                   <span class="legend_summaries">[<xsl:value-of select="$Legend"/> for all cells]</span>
                </li>
              </xsl:for-each>
              
            </ul>
          </span>
          
        </li>
      </xsl:if>

      <xsl:if test="CharEnvMenu">
        <li>
          <a>
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Char Environment'"/>
              <xsl:with-param name="tag"  select="concat('CEM_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
              <xsl:with-param name="hide">true</xsl:with-param>
            </xsl:call-template>
          </a>
          
          <span class="hiddenBranch">
            <xsl:attribute name="id">
              <xsl:value-of select="concat('_CEM_', @CornerName)"/>
            </xsl:attribute>
            <xsl:attribute name="hide">true</xsl:attribute>            

            <ul class="TOC3">
              <xsl:for-each select="CharEnvMenu/CharEnvGroups">
                <xsl:call-template name="CreateCollapse">
                  <xsl:with-param name="name" select="'Library Char Environment'"/>
                  <xsl:with-param name="tag"  select="concat('LCE_', /Library/@CornerName)"/>
                  <xsl:with-param name="dir">.</xsl:with-param>
                </xsl:call-template>

                <span>
                  <xsl:attribute name="id">
                    <xsl:value-of select="concat('_LCE_', /Library/@CornerName)"/>
                  </xsl:attribute>
                <ul class="TOC4">     
                  <xsl:for-each select="El">
                    <li>
                      <xsl:element name="a">
                        <xsl:attribute name="href">
                          CharEnv_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Cell"/>#<xsl:value-of select="@Name"/>
                        </xsl:attribute>
                        <xsl:value-of select="@Name"/>
                      </xsl:element>
                    </li>
                  </xsl:for-each>
                </ul>
                </span>
              </xsl:for-each>
            </ul>


            <ul class="TOC3">
              <xsl:for-each select="CharEnvMenu/CharEnvCells">
                <xsl:call-template name="CreateCollapse">
                  <xsl:with-param name="name" select="'Custom Char Environment'"/>
                  <xsl:with-param name="tag"  select="concat('CCE_', /Library/@CornerName, @Name)"/>
                  <xsl:with-param name="dir">.</xsl:with-param>
                </xsl:call-template>

                <span> 
                  <xsl:attribute name="id">
                    <xsl:value-of select="concat('_CCE_', /Library/@CornerName, @Name)"/>
                  </xsl:attribute> 
                <ul class="TOC4">            
                  <xsl:for-each select="El">
                    <li>
                      <xsl:element name="a">
                        <xsl:attribute name="href">
                          Cells/<xsl:value-of select="@Name"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Cell"/>#Characterization Environment</xsl:attribute>
                        <xsl:value-of select="@Name"/>
                      </xsl:element>
                    </li>
                  </xsl:for-each>
                </ul>

                </span>
              </xsl:for-each>
            </ul>
          </span>


        </li>
      </xsl:if>

      <xsl:if test="Profilings/Plot">
        <li>
          <a>
            <xsl:if test="$Config/@doctype='PDF'">
              <xsl:attribute name="href">
                <xsl:value-of select="concat('Profilings [', @CornerName, ']')"/>
              </xsl:attribute>
            </xsl:if>
            
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Profilings'"/>
              <xsl:with-param name="tag"  select="concat('PP_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
              <xsl:with-param name="hide">true</xsl:with-param>
            </xsl:call-template>
          </a>
          
          <span class="hiddenBranch">
            <xsl:attribute name="id">
              <xsl:value-of select="concat('_PP_', @CornerName)"/>
            </xsl:attribute>
            
            <xsl:attribute name="hide">true</xsl:attribute>
            
            <xsl:call-template name="CreateTOCPlot">
              <xsl:with-param name="toc"   select="3"/>
              <xsl:with-param name="plots" select="Profilings/Plot"/>
            </xsl:call-template>
          </span>
        </li>
      </xsl:if>

      <xsl:if test="CapSummary/Entry or PowerSummary/Entry or TimingSummary/Entry or CsVsNldmSummary/Entry">
        <li>
          <a>
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Summaries'"/>
              <xsl:with-param name="tag"  select="concat('SS_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
              <xsl:with-param name="hide">true</xsl:with-param>
            </xsl:call-template>
          </a>
          
          <span class="hiddenBranch">
            <xsl:attribute name="id">
              <xsl:value-of select="concat('_SS_', @CornerName)"/>
            </xsl:attribute>
            
            <xsl:attribute name="hide">true</xsl:attribute>
            
            <xsl:call-template name="CreateTOCSummary">
              <xsl:with-param name="toc"   select="3"/>
            </xsl:call-template>
          </span>
        </li>
      </xsl:if>
      
      <li>
        <a>
          <xsl:if test="$Config/@doctype='PDF'">
            <xsl:attribute name="href">
              <xsl:value-of select="concat('Cells [', @CornerName, ']')"/>
            </xsl:attribute>
          </xsl:if>
          
          <xsl:call-template name="CreateCollapse">
            <xsl:with-param name="name" select="'Cells'"/>
            <xsl:with-param name="tag"  select="concat('CO_', @CornerName)"/>
            <xsl:with-param name="dir">.</xsl:with-param>
            <xsl:with-param name="hide">true</xsl:with-param>
          </xsl:call-template>
        </a>
        
        <span class="hiddenBranch">
          <!--<ul class="TOC3hidden">-->
            <xsl:attribute name="id">
              <xsl:value-of select="concat('_CO_', @CornerName)"/>
            </xsl:attribute>
            
            <xsl:attribute name="hide">true</xsl:attribute>
            <ul class="TOC3">
              <xsl:for-each select="Cells/CellType">
                <xsl:call-template name="CreateCollapse">
                  <xsl:with-param name="name" select="@Name"/>
                  <xsl:with-param name="tag"  select="concat('CT_', /Library/@CornerName, @Name)"/>
                  <xsl:with-param name="dir">.</xsl:with-param>
                  <xsl:with-param name="hide">true</xsl:with-param>
                </xsl:call-template>
                <xsl:variable name="typeName" select="@Name"/>
                <span class="hiddenBranch">
                  <xsl:attribute name="id">
                    <xsl:value-of select="concat('_CT_', /Library/@CornerName, @Name)"/>
                  </xsl:attribute>
                  <xsl:attribute name="hide">true</xsl:attribute>
                  <ul class="TOC4">            
                    <xsl:choose>
                      <xsl:when test="CellRange">
                        <xsl:for-each select="CellRange">
                          <xsl:call-template name="CreateCollapse">
                            <xsl:with-param name="name" select="concat(@First, '&#160;&#160;-&#160;&#160;', @Last)"/>
                            <xsl:with-param name="tag"  select="concat('CR_', /Library/@CornerName, $typeName, @First)"/>
                            <xsl:with-param name="dir">.</xsl:with-param>
                            <xsl:with-param name="hide">true</xsl:with-param>
                          </xsl:call-template>
                          <span class="hiddenBranch">
                            <xsl:attribute name="id">
                              <xsl:value-of select="concat('_CR_', /Library/@CornerName, $typeName, @First)"/>
                            </xsl:attribute>
                            <xsl:attribute name="hide">true</xsl:attribute>
                            <ul class="TOC4">
                              <xsl:for-each select="Cell">
                                <li>
                                  <xsl:element name="a">
                                    <xsl:choose>
                                      <xsl:when test="$Config/@doctype='PDF'">
                                        <xsl:attribute name="href">
                                          <xsl:value-of select="concat(@Name, ' [', /Library/@CornerName, ']')"/>
                                        </xsl:attribute>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:attribute name="href">
                                          Cells/<xsl:value-of select="@Name"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Cell"/>
                                        </xsl:attribute>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:value-of select="@Name"/>
                                  </xsl:element>
                                </li>
                              </xsl:for-each>
                            </ul>
                          </span>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:for-each select="Cell">
                          <li>
                            <xsl:element name="a">
                              <xsl:choose>
                                <xsl:when test="$Config/@doctype='PDF'">
                                  <xsl:attribute name="href">
                                    <xsl:value-of select="concat(@Name, ' [', /Library/@CornerName, ']')"/>
                                  </xsl:attribute>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:attribute name="href">
                                    Cells/<xsl:value-of select="@Name"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Cell"/>
                                  </xsl:attribute>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:value-of select="@Name"/>
                            </xsl:element>
                          </li>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                  </ul>
                </span>
              </xsl:for-each>
            </ul> <!-- THIS LINE WAS ADDED BECAUSE OF BUG 3102 -->
          <!--</ul>-->
        </span>
      </li>

      <xsl:if test="DiscardedCells/Entry">
        <li>
          <a>
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Discarded Cells'"/>
              <xsl:with-param name="tag"  select="concat('DC_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
              <xsl:with-param name="hide">true</xsl:with-param>
            </xsl:call-template>
          </a>
          
          <span>
            <ul class="TOC3hidden">
              <xsl:attribute name="id">
                <xsl:value-of select="concat('_DC_', @CornerName)"/>
              </xsl:attribute>
              <xsl:attribute name="hide">true</xsl:attribute>

              <ul class="TOC4">
                <xsl:for-each select="DiscardedCells/Entry">
                  <li>
                    <xsl:element name="a">
                      <xsl:value-of select="normalize-space(translate(trg_cell, '&quot;()', ''))"/>
                      (relative sf = <xsl:value-of select="normalize-space(translate(trg_rel_strength_factor, '&quot;()', ''))"/>), 
                      Reference Cell: <xsl:value-of select="normalize-space(translate(ref_cell, '&quot;()', ''))"/>
                      (relative sf = <xsl:value-of select="normalize-space(translate(ref_rel_strength_factor, '&quot;()', ''))"/>)
                    </xsl:element>
                  </li>
                </xsl:for-each>              
              </ul>
            </ul>
          </span>
        </li>
      </xsl:if>
      
    </ul>
    
  </xsl:template>
  
  
  
  <!-- Creating TOC related to the summary pages -->
  <xd:doc>
    Creates an entry in the Table of Contents for summary pages
    <xd:param name="toc" type="integer">level of the entry in the Table of Contents</xd:param>
  </xd:doc>
  <xsl:template name="CreateTOCSummary">
    
    <xsl:param name="toc"/>
    
    <ul>
      
      <xsl:attribute name="class">
        TOC<xsl:value-of select="$toc"/>
      </xsl:attribute>

      <xsl:if test="ConstrValidSummary/Entry">
        <li>
          <a>
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Constraint Validation'"/>
              <xsl:with-param name="tag"  select="concat('CTVS_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
            </xsl:call-template>
          </a>
          
          <span>
            <ul>
              <xsl:attribute name="class">
                TOC<xsl:value-of select="$toc + 1"/>
              </xsl:attribute>
              
              <xsl:attribute name="id">
                <xsl:value-of select="concat('_CTVS_', @CornerName)"/>
              </xsl:attribute>
              
              <xsl:for-each select="ConstrValidSummary/Entry">
                <li>
                  <xsl:element name="a">
                    <xsl:variable name="name">
                      <xsl:call-template name="Map">
                        <xsl:with-param name="map" select="$MapNode/summary"/>
                        <xsl:with-param name="key" select="concat(@Alias, @Name,'_Title')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:attribute name="href">
                      <xsl:value-of select="@Link"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Summary"/>
                    </xsl:attribute>                    
                    <xsl:value-of select="$name"/>
                  </xsl:element>
                   
                   <!--Corner Information -->
                   <xsl:variable name="SecLegend">
                     <xsl:value-of select="../../@CornerName"/>
                   </xsl:variable>
                   <!--Analysis Focus -->
                   <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$SecLegend]"/>
                  
                   <xsl:variable name="Legend">
                     <xsl:choose>  
                       <xsl:when test="$CornerNode/@Focus = $FocusCorr">
                         <xsl:call-template name="Map">
                           <xsl:with-param name="map" select="$MapNode/correlation"/>
                           <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:when>
                       <xsl:otherwise> 
                         <xsl:call-template name="Map">
                           <xsl:with-param name="map" select="$MapNode/summary"/>
                           <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:otherwise> 
                     </xsl:choose> 
                   </xsl:variable>
                  
                   <span class="legend_summaries">[<xsl:value-of select="$Legend"/>]</span>
                </li>
              </xsl:for-each>
              
            </ul>
          </span>
          
        </li>
      </xsl:if>

      <xsl:if test="CapSummary/Entry">
        <li>
          
          <a>
            
            <xsl:if test="$Config/@doctype='PDF'">
              <xsl:attribute name="href">
                <xsl:value-of select="concat('Capacitance [', @CornerName, ']')"/>
              </xsl:attribute>
            </xsl:if>
            
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Capacitance'"/>
              <xsl:with-param name="tag"  select="concat('CPCS_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
            </xsl:call-template>
            
          </a>
          
          <span>
            <ul>
              <xsl:attribute name="class">
                TOC<xsl:value-of select="$toc + 1"/>
              </xsl:attribute>
              
              <xsl:attribute name="id">
                <xsl:value-of select="concat('_CPCS_', @CornerName)"/>
              </xsl:attribute>
              
              <xsl:for-each select="CapSummary/Entry">
                <li>
                  <xsl:element name="a">
                    
                    <xsl:variable name="name">
                      <xsl:call-template name="Map">
                        <xsl:with-param name="map" select="$MapNode/summary"/>
                        <xsl:with-param name="key" select="concat(@Alias, @Name,'_Title')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    
                    <xsl:choose>
                      <xsl:when test="$Config/@doctype='PDF'">
                        <xsl:attribute name="href">
                          <xsl:value-of select="concat($name, ' [', /Library/@CornerName, ']')"/>
                        </xsl:attribute>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:attribute name="href">
                          <xsl:value-of select="@Link"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Summary"/>
                        </xsl:attribute>
                      </xsl:otherwise>
                    </xsl:choose>
                    
                    <xsl:value-of select="$name"/>
                    <!--<xsl:value-of select="$CornerSuffix"/>-->
                  </xsl:element>
                   
                   <!--Corner Information -->
                   <xsl:variable name="SecLegend">
                   <xsl:value-of select="../../@CornerName"/>
                  </xsl:variable>
                  <!--Analysis Focus -->
                   <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$SecLegend]"/>
                  
                   <xsl:variable name="Legend">
                     <xsl:choose>  
                       <xsl:when test="$CornerNode/@Focus = $FocusCorr">
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/correlation"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:when>
                       <xsl:otherwise> 
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/summary"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:otherwise> 
                     </xsl:choose> 
                   </xsl:variable>
                  
                  <xsl:choose>
                    <xsl:when test="$SecLegend = $RelDeviation or $SecLegend = $AbsDeviation">
                      <xsl:if test="$CornerNode/@Focus = 'correlation'">
                        <xsl:choose>
                          <xsl:when test="@Name = 'MXC'">
                            <span class="legend_summaries">[modulus of worst deviation of <xsl:value-of select="$Legend"/>]</span>
                          </xsl:when>
                          <xsl:otherwise>
                            <span class="legend_summaries">[<xsl:value-of select="$Legend"/> deviation]</span>
                         </xsl:otherwise>
                        </xsl:choose>
                      </xsl:if>
                       <xsl:if test="$CornerNode/@Focus = 'performance'">
                        <xsl:choose>
                          <xsl:when test="@Name = 'MXC'">
                             <span class="legend_summaries">[worst deviation data of <xsl:value-of select="$Legend"/>]</span>
                          </xsl:when>
                          <xsl:otherwise>
                            <span class="legend_summaries">[<xsl:value-of select="$Legend"/> deviation]</span>
                         </xsl:otherwise>
                        </xsl:choose>
                       </xsl:if>  
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Best'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (best case)]</span>
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Worst'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (worst case)]</span>
                    </xsl:when>
                    <xsl:otherwise>
                      <span class="legend_summaries">[worst value of <xsl:value-of select="$Legend"/>]</span>
                    </xsl:otherwise>
                 </xsl:choose>
                </li>
              </xsl:for-each>
              
            </ul>
          </span>
          
        </li>
      </xsl:if>


      <xsl:if test="CsVsNldmSummary/Entry">
        <li>
          
          <a>
            
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Current Source vs. NLDM'"/>
              <xsl:with-param name="tag"  select="concat('CSVS_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
            </xsl:call-template>
            
          </a>
          
          <span>
            <ul>
              <xsl:attribute name="class">
                TOC<xsl:value-of select="$toc + 1"/>
              </xsl:attribute>
              
              <xsl:attribute name="id">
                <xsl:value-of select="concat('_CSVS_', @CornerName)"/>
              </xsl:attribute>
              
              <xsl:for-each select="CsVsNldmSummary/Entry">
                <li>
                  <xsl:element name="a">
                    
                    <xsl:variable name="name">
                      <xsl:call-template name="Map">
                        <xsl:with-param name="map" select="$MapNode/summary"/>
                        <xsl:with-param name="key" select="concat(@Alias, @Name,'_Title')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    
                    <xsl:attribute name="href">
                      <xsl:value-of select="@Link"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Summary"/>
                    </xsl:attribute>
                    
                    <xsl:value-of select="$name"/>
                    <!--<xsl:value-of select="$CornerSuffix"/>-->
                  </xsl:element>
                   
                   <!--Corner Information -->
                   <xsl:variable name="SecLegend">
                   <xsl:value-of select="../../@CornerName"/>
                  </xsl:variable>
                  <!--Analysis Focus -->
                   <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$SecLegend]"/>
                  
                   <xsl:variable name="Legend">
                     <xsl:choose>  
                       <xsl:when test="$CornerNode/@Focus = $FocusCorr">
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/correlation"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:when>
                       <xsl:otherwise> 
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/summary"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:otherwise> 
                     </xsl:choose> 
                   </xsl:variable>
                  
                  <xsl:choose>
                    <xsl:when test="$SecLegend = $RelDeviation or $SecLegend = $AbsDeviation">
                      <xsl:if test="$CornerNode/@Focus = 'correlation'">
                        <xsl:choose>
                          <xsl:when test="@Name = 'MXC'">
                            <span class="legend_summaries">[modulus of worst deviation of <xsl:value-of select="$Legend"/>]</span>
                          </xsl:when>
                          <xsl:otherwise>
                            <span class="legend_summaries">[<xsl:value-of select="$Legend"/> deviation]</span>
                         </xsl:otherwise>
                        </xsl:choose>
                      </xsl:if>
                       <xsl:if test="$CornerNode/@Focus = 'performance'">
                        <xsl:choose>
                          <xsl:when test="@Name = 'MXC'">
                             <span class="legend_summaries">[worst deviation data of <xsl:value-of select="$Legend"/>]</span>
                          </xsl:when>
                          <xsl:otherwise>
                            <span class="legend_summaries">[<xsl:value-of select="$Legend"/> deviation]</span>
                         </xsl:otherwise>
                        </xsl:choose>
                       </xsl:if>  
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Best'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (best case)]</span>
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Worst'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (worst case)]</span>
                    </xsl:when>
                    <xsl:otherwise>
                      <span class="legend_summaries">[worst value of <xsl:value-of select="$Legend"/>]</span>
                    </xsl:otherwise>
                 </xsl:choose>
                </li>
              </xsl:for-each>
              
            </ul>
          </span>
          
        </li>
      </xsl:if>


      
      <xsl:if test="PowerSummary/Entry">
        <li>
          
          <a>
            
            <xsl:if test="$Config/@doctype='PDF'">
              <xsl:attribute name="href">
                <xsl:value-of select="concat('Power [', @CornerName, ']')"/>
              </xsl:attribute>
            </xsl:if>
            
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Power'"/>
              <xsl:with-param name="tag"  select="concat('CPS_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
            </xsl:call-template>
            
          </a>
          
          <span>
            <ul>
              <xsl:attribute name="class">
                TOC<xsl:value-of select="$toc + 1"/>
              </xsl:attribute>
              
              <xsl:attribute name="id">
                <xsl:value-of select="concat('_CPS_', @CornerName)"/>
              </xsl:attribute>
              
              <xsl:for-each select="PowerSummary/Entry">
              
                <li>
                  <xsl:element name="a">
                    
                    <xsl:variable name="name">
                      <xsl:call-template name="Map">
                        <xsl:with-param name="map" select="$MapNode/summary"/>
                        <xsl:with-param name="key" select="concat(@Alias, @Name,'_Title')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$Config/@doctype='PDF'">
                        <xsl:attribute name="href">
                          <xsl:value-of select="concat($name, ' [', /Library/@CornerName, ']')"/>
                        </xsl:attribute>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:attribute name="href">
                          <xsl:value-of select="@Link"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Summary"/>
                        </xsl:attribute>
                      </xsl:otherwise>
                    </xsl:choose>
                    
                    <xsl:value-of select="$name"/> 
                    <!--<xsl:value-of select="$CornerSuffix"/>-->
                    
                 </xsl:element>
                  
                  <!--Corner Information -->
                   <xsl:variable name="SecLegend">
                   <xsl:value-of select="../../@CornerName"/>
                  </xsl:variable>
                  <!--Analysis Focus -->
                   <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$SecLegend]"/>
                  
                   <xsl:variable name="Legend">
                     <xsl:choose>  
                       <xsl:when test="$CornerNode/@Focus = $FocusCorr">
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/correlation"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:when>
                       <xsl:otherwise> 
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/summary"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:otherwise> 
                     </xsl:choose> 
                   </xsl:variable>
                  
                  <xsl:choose>
                    <xsl:when test="$SecLegend = $RelDeviation or $SecLegend = $AbsDeviation">
                      <xsl:if test="$CornerNode/@Focus = 'correlation'">
                            <span class="legend_summaries">[modulus of worst deviation of <xsl:value-of select="$Legend"/>]</span>
                      </xsl:if>
                       <xsl:if test="$CornerNode/@Focus = 'performance'">
                         <span class="legend_summaries">[average deviation of <xsl:value-of select="$Legend"/>]</span>
                       </xsl:if>  
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Best'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (best case)]</span>
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Worst'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (worst case)]</span>
                    </xsl:when>
                    <xsl:otherwise>
                      <span class="legend_summaries">[worst value of <xsl:value-of select="$Legend"/>]</span>
                    </xsl:otherwise>
                 </xsl:choose>
                 </li>
              </xsl:for-each>
              
            </ul>
          </span>
          
        </li>
      </xsl:if>
      
      <xsl:if test="TimingSummary/Entry">
        <li>
          
          <a>
            
            <xsl:if test="$Config/@doctype='PDF'">
              <xsl:attribute name="href">
                <xsl:value-of select="concat('Timing [', @CornerName, ']')"/>
              </xsl:attribute>
            </xsl:if>
            
            <xsl:call-template name="CreateCollapse">
              <xsl:with-param name="name" select="'Timing'"/>
              <xsl:with-param name="tag"  select="concat('CTS_', @CornerName)"/>
              <xsl:with-param name="dir">.</xsl:with-param>
            </xsl:call-template>
            
          </a>
          
          <span>
            <ul>
              <xsl:attribute name="class">
                TOC<xsl:value-of select="$toc + 1"/>
              </xsl:attribute>
              
              <xsl:attribute name="id">
                <xsl:value-of select="concat('_CTS_', @CornerName)"/>
              </xsl:attribute>
              
              <xsl:for-each select="TimingSummary/Entry">
                <li>
                  <xsl:element name="a">
                    
                    <xsl:variable name="name">
                      <xsl:call-template name="Map">
                        <xsl:with-param name="map" select="$MapNode/summary"/>
                        <xsl:with-param name="key" select="concat(@Alias, @Name,'_Title')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    
                    <xsl:choose>
                      <xsl:when test="$Config/@doctype='PDF'">
                        <xsl:attribute name="href">
                          <xsl:value-of select="concat($name, ' [', /Library/@CornerName, ']')"/>
                        </xsl:attribute>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:attribute name="href">
                          <xsl:value-of select="@Link"/>_<xsl:value-of select="/Library/@CornerName"/><xsl:value-of select="$Extensions/Summary"/>
                        </xsl:attribute>
                      </xsl:otherwise>
                    </xsl:choose>
                    
                    <xsl:value-of select="$name"/>
                    <!--<xsl:value-of select="$CornerSuffix"/>-->
                    
                  </xsl:element>
                  
                   <!--Corner Information -->
                   <xsl:variable name="SecLegend">
                   <xsl:value-of select="../../@CornerName"/>
                  </xsl:variable>
                  <!--Analysis Focus -->
                   <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$SecLegend]"/>
                  
                   <xsl:variable name="Legend">
                     <xsl:choose>  
                       <xsl:when test="$CornerNode/@Focus = $FocusCorr">
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/correlation"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:when>
                       <xsl:otherwise> 
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/summary"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:otherwise> 
                     </xsl:choose> 
                   </xsl:variable>
                  
                  <xsl:choose>
                    <xsl:when test="($SecLegend = $RelDeviation or $SecLegend = $AbsDeviation)">
                      <xsl:if test="$CornerNode/@Focus = 'correlation'">
                            <span class="legend_summaries">[modulus of worst deviation of <xsl:value-of select="$Legend"/>]</span>
                      </xsl:if>
                       <xsl:if test="$CornerNode/@Focus = 'performance'">
                         <span class="legend_summaries">[worst deviation of <xsl:value-of select="$Legend"/>]</span>
                       </xsl:if>  
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Best'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (best case)]</span>
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Worst'">
                      <span class="legend_summaries">[worst <xsl:value-of select="$Legend"/> (worst case)]</span>
                    </xsl:when>
                    <xsl:otherwise>
                      <span class="legend_summaries">[worst value of <xsl:value-of select="$Legend"/>]</span>
                    </xsl:otherwise>
                 </xsl:choose>
                </li>
              </xsl:for-each>
              
            </ul>
          </span>
          
        </li>
      </xsl:if>

    </ul>
  </xsl:template>
  
  <!-- Creating TOC related to the profiling pages -->
  <xd:doc>
    Creates an entry in the Table of Contents for profiling pages
    <xd:param name="toc" type="integer">level of the entry in the Table of Contents</xd:param>
    <xd:param name="plots" type="node-set">set of plots to be included in the Table of Contents</xd:param>
  </xd:doc>
  <xsl:template name="CreateTOCPlot">
    
    <xsl:param name="toc"/>
    <xsl:param name="plots"/>
    
    <xsl:variable name="CornerSuffix">
      <xsl:value-of select="concat(' [',/Library/@CornerName,']')"/>
      <!--<xsl:choose>
          <xsl:when test="substring(/Library/@CornerName,1,9)=$NoCorner and $Config/@doctype='PDF'"/>
          <xsl:otherwise>
          <xsl:value-of select="concat(' [',/Library/@CornerName,']')"/>
          </xsl:otherwise>
          </xsl:choose>-->
    </xsl:variable>
    <ul>
      
      <xsl:attribute name="class">
        TOC<xsl:value-of select="$toc"/>
      </xsl:attribute>
      
      <xsl:for-each select="$plots">
        <li>
          
          <xsl:variable name="Name">
            <xsl:call-template name="buildProfilingTitle"/>
          </xsl:variable>
          
          <xsl:if test="@File">
            <a>
              
              <xsl:choose>
                <xsl:when test="$Config/@doctype='PDF'">
                  <xsl:attribute name="href">
                    <xsl:value-of select="concat($Name, ' [', /Library/@CornerName, ']')"/>
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:attribute name="href">
                    <xsl:value-of select="concat('Profilings/', @File,'_',/Library/@CornerName, $Extensions/Profiling)"/>
                  </xsl:attribute>
                </xsl:otherwise>
              </xsl:choose>
              
              <xsl:value-of select="$Name"/>
              
            </a>
          </xsl:if>
          
          <xsl:if test="Plot">
            
            <a>
              
              <xsl:if test="$Config/@doctype='PDF'">
                <xsl:attribute name="href">
                  <xsl:value-of select="concat(@Name, ' [', /Library/@CornerName, ']')"/>
                </xsl:attribute>
              </xsl:if>
              
              <xsl:call-template name="CreateCollapse">
                <xsl:with-param name="name" select="$Name"/>
                <xsl:with-param name="tag"  select="concat($Name, '_', $CornerSuffix)"/>
                <xsl:with-param name="dir">.</xsl:with-param>
              </xsl:call-template>
              
            </a>
            <span>
              
              <xsl:attribute name="id">_<xsl:value-of select="concat($Name, '_', $CornerSuffix)"/></xsl:attribute>
              
              <xsl:call-template name="CreateTOCPlot">
                <xsl:with-param name="toc"   select="$toc + 1"/>
                <xsl:with-param name="plots" select="Plot"/>
              </xsl:call-template>
              
            </span>
            
          </xsl:if>
          <xsl:if test="$toc = 4">
              <!--     <xsl:variable name="Legend">
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/profiling_plots_legend"/>
                         <xsl:with-param name="key" select="concat(@Name, '_Legend')"/>
                         </xsl:call-template>
                   </xsl:variable>
                 <span class="legend_summaries">[<xsl:value-of select="$Legend"/>]</span>  -->
              <!--Corner Information -->
                   <xsl:variable name="SecLegend">
                   <xsl:value-of select="../../../@CornerName"/>
                  </xsl:variable>
                  <!--Analysis Focus -->
                   <xsl:variable name="CornerNode" select="$XmlCornerList/CornerList/Corner[@Name=$SecLegend]"/>
                  
                   <xsl:variable name="Legend">
                     <xsl:choose>  
                       <xsl:when test="$CornerNode/@Focus = $FocusCorr">
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/profiling_plots_corr_legend"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:when>
                       <xsl:otherwise> 
                         <xsl:call-template name="Map">
                         <xsl:with-param name="map" select="$MapNode/profiling_plots_legend"/>
                         <xsl:with-param name="key" select="concat(@Name,'_Legend')"/>
                         </xsl:call-template>
                       </xsl:otherwise> 
                     </xsl:choose> 
                   </xsl:variable>
                  
                  <xsl:choose>
                    <xsl:when test="$SecLegend = $RelDeviation or $SecLegend = $AbsDeviation">
                      <xsl:if test="$CornerNode/@Focus = 'correlation'">
                            <span class="legend_summaries">[modulus of worst deviation data <xsl:value-of select="$Legend"/>]</span>
                      </xsl:if>
                       <xsl:if test="$CornerNode/@Focus = 'performance'">
                      <xsl:choose>
                        <xsl:when test="@Name = 'area'">
                           <span class="legend_summaries">[<xsl:value-of select="$Legend"/> deviation]</span>
                        </xsl:when>
                        <xsl:otherwise>
                          <span class="legend_summaries">[deviation of <xsl:value-of select="$Legend"/>]</span>
                        </xsl:otherwise>
                      </xsl:choose>
                      </xsl:if>  
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Best'">
                      <span class="legend_summaries">[<xsl:value-of select="$Legend"/> (best case)]</span>
                    </xsl:when>
                    <xsl:when test="$SecLegend = 'Worst'">
                      <span class="legend_summaries">[<xsl:value-of select="$Legend"/> (worst case)]</span>
                    </xsl:when>
                    <xsl:otherwise>
                      <span class="legend_summaries">[<xsl:value-of select="$Legend"/>]</span>
                    </xsl:otherwise>
                 </xsl:choose>
           </xsl:if>      
        </li>
      </xsl:for-each>
      
    </ul>
    
  </xsl:template>
  
</xsl:stylesheet>
