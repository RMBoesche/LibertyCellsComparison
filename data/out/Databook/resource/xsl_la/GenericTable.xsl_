<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://www.pnp-software.com/XSLTdoc">
  
  <xd:doc type="stylesheet">
    <xd:copyright>&#169; 1984-2024 Silvaco, Inc. All rights reserved.</xd:copyright>
    <xd:MyProperty>
      <xd:MyCaption>Copyright Notice:</xd:MyCaption>
      <xd:MyLine>This document contains confidential and proprietary information.</xd:MyLine>
      <xd:MyLine>Reproduction or usage of this document, in part or whole, by any means, electrical, mechanical, optical, chemical or otherwise is prohibited, without written permission from Silvaco, Inc.</xd:MyLine>
      <xd:MyLine>The information contained herein is protected by U.S. and international copyright laws.</xd:MyLine>
    </xd:MyProperty>
  </xd:doc>
  
  <xsl:include href="NavigationBar.xsl"/>
  <xsl:include href="TimingTable.xsl"/>
  
  
  
  <!-- Summary table processment -->
  <xd:doc>Redirects all summary data to be processed by the GenericTable template</xd:doc>
  <xsl:template match="ReducedData|FirstOrder">
    <xsl:call-template name="GenericTable"/>
  </xsl:template>
  
  
  
  <!-- Summary table processment -->
  <xd:doc>Builds the summary table page. Calls the appropriate templates to build each section of the page</xd:doc>
  <xsl:template name="GenericTable">
    
    <xsl:variable name="Title">
      <xsl:call-template name="Map">
        <xsl:with-param name="map" select="$MapNode/summary"/>
        <xsl:with-param name="key" select="concat(@Name,'_Title')"/>
      </xsl:call-template>
      
      <!--<xsl:if test="substring(@CornerName,1,9)!=$NoCorner or $Config/@doctype='PDF'">-->
<!-- Commented out for bug 19638
       <xsl:value-of select="concat(' [', @CornerName, ']')"/> 
-->
      <!--</xsl:if>-->
      
    </xsl:variable>
    
    <html>
      <head>
        <title>
          <xsl:value-of select="$Title"/>
        </title>
        <xsl:call-template name="Includes"/>
      </head>
      <body onLoad="NanInit();">

        <a id="PageInfo">
          <xsl:attribute name="RootPath"><xsl:value-of select="$RootPath"/></xsl:attribute>
          <xsl:attribute name="CellPath"><xsl:value-of select="'Cells/'"/></xsl:attribute>
          <xsl:attribute name="SummName"><xsl:value-of select="/*/@Name"/></xsl:attribute>
          <xsl:attribute name="Corner"><xsl:value-of select="$Corner"/></xsl:attribute>
          <xsl:attribute name="RefNode"><xsl:value-of select="$RefNode/@Name"/></xsl:attribute>
          <xsl:attribute name="TrgNode"><xsl:value-of select="$TrgNode/@Name"/></xsl:attribute>
          <xsl:attribute name="FileExt"><xsl:value-of select="$Extensions/Cell"/></xsl:attribute>
          <xsl:attribute name="Focus"><xsl:value-of select="/*/@AnalysisFocus"/></xsl:attribute>
          <xsl:attribute name="RefFile"><xsl:value-of select="concat($file, '_', $RefNode/@Name, $Extensions/Summary)"/></xsl:attribute>
          <xsl:attribute name="TrgFile"><xsl:value-of select="concat($file, '_', $TrgNode/@Name, $Extensions/Summary)"/></xsl:attribute>
        </a>
        
        <xsl:call-template name="SilvacoHeader">
          <xsl:with-param name="dir"   select="'.'"/>
          <xsl:with-param name="Title"  select="$Title"/>
        </xsl:call-template>
        
        <!-- Top navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar">
          
          <xsl:with-param name="PrevName">
            <xsl:if test="Navigation/Previous">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Previous/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>
          
          <xsl:with-param name="NextName">
            <xsl:if test="Navigation/Next">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Next/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>
          
        </xsl:call-template>
        
        <xsl:call-template name="TitleNotes"/>

        <xsl:call-template name="GenTable"/>
        <xsl:call-template name="Notes"/>
        
        <!-- Bottom navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar">          
          <xsl:with-param name="Pos">Bottom</xsl:with-param>          
          <xsl:with-param name="PrevName">
            <xsl:if test="Navigation/Previous">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Previous/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>          
          <xsl:with-param name="NextName">
            <xsl:if test="Navigation/Next">
              <xsl:call-template name="Map">
                <xsl:with-param name="map" select="$MapNode/summary"/>
                <xsl:with-param name="key" select="concat(Navigation/Next/@Name,'_Title')"/>
              </xsl:call-template>
            </xsl:if>
          </xsl:with-param>          
        </xsl:call-template>
        
      </body>
    </html>   
  </xsl:template>
  
  
  <!-- Generate summary table itself -->
  <xd:doc>Inside a summary table page, generates the tables themselves. Calls the PrintTimingTable_Aglomerated template</xd:doc>
  <xsl:template name="GenTable">
    <xsl:for-each select="Table">
      <a>
        
        <xsl:attribute name="name">
          <xsl:value-of select="concat('Table_',@Id)"/>
        </xsl:attribute>


        <xsl:call-template name="CreateTableCaption"/>
        
        <span>
          
          <xsl:attribute name="id">
            <xsl:value-of select="concat('_Table_',@Id)"/>
          </xsl:attribute>
          <xsl:attribute name="eName">
            <xsl:call-template name="Map">
              <xsl:with-param name="map" select="$MapNode/summary"/>
              <xsl:with-param name="key" select="concat(/*/@Name, '_Title')"/>
            </xsl:call-template>
          </xsl:attribute>
        
          <hr class="Title"/>
          
          <xsl:variable name="keyName"><xsl:choose>
            <xsl:when test="../@Name=$OSRatio or ../@Name=$FOOS"><xsl:value-of select="$OS"/></xsl:when>
            <xsl:when test="../@Name=$PDRatio or ../@Name=$FOPD or ../@Name=$FO4D"><xsl:value-of select="$PD"/></xsl:when>
            <xsl:otherwise><xsl:value-of select="../@Name"/></xsl:otherwise>
          </xsl:choose>_Tag</xsl:variable>
          <xsl:call-template name="PrintTimingTable_Aglomerated">
            <xsl:with-param name="table" select="."/>
            <xsl:with-param name="SecId" select="/*/@Name"/>
            <xsl:with-param name="var1_label" select="$unit/time"/>
            <xsl:with-param name="var2_label">
              <xsl:choose>
                <xsl:when test="../@Name=$FP or ../@Name=$FCP or ../@Name=$TFCP or ../@Name=$RP or ../@Name=$PWR or
                                ../@Name=$TPF or ../@Name=$TPR or ../@Name=$TP or
                                ../@Name=$OS or ../@Name=$PD or ../@Name=$OSRatio or ../@Name=$PDRatio or ../@Name=$PDV">
                  <xsl:value-of select="$unit/capacitance"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$unit/time"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:with-param>
            <xsl:with-param name="unit_label">
              <xsl:choose>
                <xsl:when test="../@Name=$FP or ../@Name=$FCP or ../@Name=$TFCP or ../@Name=$RP or ../@Name=$PWR or ../@Name=$TPF or ../@Name=$TPR or ../@Name=$TP">
                  <xsl:value-of select="$dpLabel"/>
                </xsl:when>
                <xsl:when test="../@Name=$OSRatio or ../@Name=$PDRatio">
                  <xsl:value-of select="$ratioLabel"/>
                </xsl:when>
                <xsl:when test="../@Name=$CAP">
                  <xsl:value-of select="$capLabel"/>
                </xsl:when>
                <xsl:when test="../@Name=$SP">
                  <xsl:value-of select="$lpLabel"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$timLabel"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:with-param>
            <xsl:with-param name="sub_link"  select="concat('#', $Config/mapping/entry[@key=$keyName]/@value)"/>
          </xsl:call-template>
        </span>
        
      </a>
    </xsl:for-each>
  </xsl:template>
   
  
  <!-- Helper for generating title notes in summary tables -->
  <xd:doc>Generates the informations that appear at the title of the page</xd:doc>
  <xsl:template name="TitleNotes">
    
    <xsl:variable name="PDFLink">
      <xsl:call-template name="Map">
        <xsl:with-param name="map" select="$MapNode/summary"/>
        <xsl:with-param name="key" select="concat(@Name, '_Title')"/>
      </xsl:call-template>
    </xsl:variable> 
    
    <xsl:variable name="keyName"><xsl:value-of select="@Name"/>_Tag</xsl:variable>
    <xsl:variable name="Page" select="$Config/mapping/entry[@key=$keyName]/@value"/>
    
    <xsl:call-template name="CreateTitleCornerNote">
      <xsl:with-param name="PDFLink" select="$PDFLink"/>
      <xsl:with-param name="Page"    select="$Page"/>
    </xsl:call-template>
   
    Eventual numbers in <i>italic</i> show that the values have required interpolations due to internal data manipulation and/or non-matching LUT index templates.

    <p>
      <xsl:call-template name="BasicNotes">
        <xsl:with-param name="PDFLink" select="$PDFLink"/>
      </xsl:call-template>
    </p>
    
    <p>
      This section presents the 
      <span class="bold">
        <xsl:choose>
          <xsl:when test="@Name=$FOOS"> 1st order output transition approximation (based on worst case transition figures) </xsl:when>
          <xsl:when test="@Name=$FOPD"> 1st order propagation delay approximation (based on worst case propagation delay figures) </xsl:when>
          <xsl:when test="@Name=$FP"> average fall power </xsl:when>
          <xsl:when test="@Name=$FCP"> average full-cycle power </xsl:when>
          <xsl:when test="@Name=$TFCP"> average total full-cycle power </xsl:when>
          <xsl:when test="@Name=$OS"> worst case output transition </xsl:when>
          <xsl:when test="@Name=$MP"> worst case minimum pulse width </xsl:when>
          <xsl:when test="@Name=$OSRatio"> rise/fall ratios for output transition </xsl:when>
          <xsl:when test="@Name=$PDV"> worst case propagation delay voltage threshold </xsl:when>
          <xsl:when test="@Name=$PD"> worst case propagation delay </xsl:when>
          <xsl:when test="@Name=$FCD"> worst case full-cycle delay </xsl:when>
          <xsl:when test="@Name=$PDRatio"> rise/fall ratios for propagation delay </xsl:when>
          <xsl:when test="@Name=$FO4D"> worst fanout 4 delay</xsl:when>
          <xsl:when test="@Name=$PWR"> average power </xsl:when>
          <xsl:when test="@Name=$TP"> average total power </xsl:when>
          <xsl:when test="@Name=$TPF"> average total power fall </xsl:when>
          <xsl:when test="@Name=$TPR"> average total power rise </xsl:when>
          <xsl:when test="@Name=$RP"> average rise power </xsl:when>
          <xsl:when test="@Name=$MS"> worst case setup/hold metastability data </xsl:when>
          <xsl:when test="@Name=$RRMS"> worst case recovery/removal metastability data </xsl:when>
          <xsl:when test="@Name=$DQ"> worst case constrained data to output delay</xsl:when>
          <xsl:when test="@Name=$ST"> worst case setup time </xsl:when>
          <xsl:when test="@Name=$HT"> worst case hold time </xsl:when>
          <xsl:when test="@Name=$RC"> worst case recovery time </xsl:when>
          <xsl:when test="@Name=$RM"> worst case removal time </xsl:when>
          <xsl:when test="@Name=$SP"> cell leakage power </xsl:when>
        </xsl:choose>
      </span>
      for all cells.
      See <a href="#Notes">notes</a> for additional information.
    </p>
    
  </xsl:template>
  
  
  
  <!-- Generate notes -->
  <xd:doc>Generates the informations that appear at the bottom of the page</xd:doc>
  <xsl:template name="Notes">
    <a name="Notes">
      
      <xsl:call-template name="CreateCollapse">
        <xsl:with-param name="name">Notes</xsl:with-param>
        <xsl:with-param name="dir">.</xsl:with-param>
      </xsl:call-template>
      
      <span id="_Notes">
        <ul>
          
          <xsl:variable name="PDFLink">
            <xsl:call-template name="Map">
              <xsl:with-param name="map" select="$MapNode/summary"/>
              <xsl:with-param name="key" select="concat(@Name, '_Title')"/>
            </xsl:call-template>
          </xsl:variable> 
          
          <xsl:variable name="keyName"><xsl:value-of select="@Name"/>_Tag</xsl:variable>
          <xsl:variable name="Page" select="$Config/mapping/entry[@key=$keyName]/@value"/>
          
          <li>
            <xsl:call-template name="BasicNotes">
              <xsl:with-param name="PDFLink"    select="$PDFLink"/>
              <xsl:with-param name="Page"       select="$Page"/>
            </xsl:call-template>
          </li>
          <li>
            <xsl:call-template name="Corner">
              <xsl:with-param name="PDFLink" select="$PDFLink"/>
            </xsl:call-template>
          </li>
          
          <xsl:if test="@Name=$FOOS or @Name=$FOPD">
            <li>1st order approximation is based on the method of least squares.</li>
            <li>Values in red in the tables are values with the tolerance exceeded.</li>
          </xsl:if>
          
        </ul>
      </span>
      
    </a>
  </xsl:template>
 
</xsl:stylesheet>
