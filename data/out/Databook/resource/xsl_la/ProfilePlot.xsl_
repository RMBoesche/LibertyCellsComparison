<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://www.pnp-software.com/XSLTdoc">
  
  <xd:doc type="stylesheet">
    <xd:copyright>&#169; 1984-2024 Silvaco, Inc. All rights reserved.</xd:copyright>
    <xd:MyProperty>
      <xd:MyCaption>Copyright Notice:</xd:MyCaption>
      <xd:MyLine>This document contains confidential and proprietary information.</xd:MyLine>
      <xd:MyLine>Reproduction or usage of this document, in part or whole, by any means, electrical, mechanical, optical, chemical or otherwise is prohibited, without written permission from Silvaco, Inc.</xd:MyLine>
      <xd:MyLine>The information contained herein is protected by U.S. and international copyright laws.</xd:MyLine>
    </xd:MyProperty>
  </xd:doc>
  
  <xsl:include href="NavigationBar.xsl"/>
  <xsl:include href="TimingTable.xsl"/>

 
  <!-- Profiling page -->
  <xd:doc>Builds a profiling page in the databook. Calls the appropriate templates to build each section of the page</xd:doc>
  <xsl:template match="Profilings">

    <xsl:variable name="Name">
      <xsl:call-template name="buildProfilingTitle"/>
    </xsl:variable>
    
<!-- Unnecessary since bug 19638
    <xsl:variable name="CornerSuffix">
      <xsl:choose>
        <xsl:when test="substring(@CornerName,1,9)=$NoCorner"/>
        <xsl:otherwise> [<xsl:value-of select="@CornerName"/>]</xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="Title" select="concat($Name, $CornerSuffix)"/>
-->

    <xsl:variable name="TagEntry"><xsl:choose>
      <xsl:when test="@Name='cell_fall' or @Name='cell_rise' or @Name='propagation_delay'">PD</xsl:when>
      <xsl:when test="@Name='fall_transition' or @Name='rise_transition' or @Name='output_sl' or @Name='output_transition'">OS</xsl:when>
      <xsl:when test="@Name='fall_power_1d' or @Name='rise_power_1d' or @Name='power_1d' or @Name='power'">DP</xsl:when>
      <xsl:when test="@Name='cell_leakage_power'">SP</xsl:when>
    </xsl:choose>_Tag</xsl:variable>
    <xsl:variable name="Tag"><xsl:value-of select="concat('#', $Config/mapping/entry[@key=$TagEntry]/@value)"/></xsl:variable>
      
    <html>
      <head>
        <title>
          <xsl:value-of select="$Name"/>
        </title>
        <xsl:call-template name="Includes">
          <xsl:with-param name="dir" select="'..'"/>
        </xsl:call-template>
      </head>
      <body onLoad="NanInit();">
        
        <xsl:call-template name="SilvacoHeader">
          <xsl:with-param name="dir"   select="'..'"/>
          <xsl:with-param name="Title" select="$Name"/>
        </xsl:call-template>
        
        <!-- Top navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar"/>
        
        <!-- Page contents -->
        <xsl:call-template name="CreateTitleCornerNote">
          <xsl:with-param name="Page" select="@FullName"/>
        </xsl:call-template>
        
        <xsl:variable name="corner" select="@CornerName"/>
        <xsl:variable name="CornerContent">
          <xsl:call-template name="Corner">
            <xsl:with-param name="Corner"  select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
            <xsl:with-param name="Page"    select="/Profilings/@FullName"/>
            <xsl:with-param name="PDFLink" select="/Profilings/@FullName"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:if test="$CornerContent != ''">See <a href="#Notes">notes</a> for additional information.</xsl:if>
        
    <!--<MAP name="mymap">
          <xsl:for-each select="Plot/Range/ImageMap">
            <AREA SHAPE="rect" >
              <xsl:attribute name="COORDS">
                <xsl:value-of select="@Coords"/>
              </xsl:attribute>
              <xsl:attribute name="href">
                <xsl:value-of select="concat('#range_', ../../@Name, '_', ../@Name)"/>
              </xsl:attribute>
            </AREA>
          </xsl:for-each>
        </MAP>-->
        
        <xsl:for-each select="PlotBlock[@Image]">
        <!--<img usemap="#mymap">-->
          <div align="center">
            <img>
              <xsl:attribute name="src">
                <xsl:if test="$DocType='PDF'">@../../Profilings/</xsl:if>
                <xsl:value-of select="@Image"/>
              </xsl:attribute>
            </img>
          </div>
        </xsl:for-each>

        <table class="splitPage" width="100%">
          <tr>
            <xsl:for-each select="PlotBlock">
              <td class="textInTop" width="50%">
                <xsl:for-each select="Plot">
                  <xsl:call-template name="Plot">
                    <xsl:with-param name="Tag" select="$Tag"/>
                  </xsl:call-template>
                </xsl:for-each>
              </td>
            </xsl:for-each>
          </tr>
        </table>
        <xsl:call-template name="Notes"/>
        
        <!-- Bottom navigation links -->
        <xsl:call-template name="AutoBuildNavigationBar">
          <xsl:with-param name="Pos">Bottom</xsl:with-param>
        </xsl:call-template>
        
      </body>
    </html>
    
  </xsl:template>
  
  
  
  <!-- Deals with each plot -->
  <xd:doc>Process each plot entry inside a profiling page</xd:doc>
  <xsl:template name="Plot">
    <xsl:param name="Tag"/> 
    
    <xsl:if test="@Name">
      <xsl:call-template name="CreateCollapse">
        <xsl:with-param name="name">
          <xsl:call-template name="Map">
            <xsl:with-param name="map" select="$MapNode/profiling_plots"/>
            <xsl:with-param name="key" select="@Name"/>
          </xsl:call-template>
          
          <xsl:if test="@Name">
            : <xsl:value-of select="count(PlotSection[1]/Range/Entry)"/> cell(s)
          </xsl:if>
        </xsl:with-param>
        <xsl:with-param name="tag" select="@Name"/>
        <xsl:with-param name="dir">..</xsl:with-param>
      </xsl:call-template>
    </xsl:if>
    
    <span class="branch">
      
      <xsl:attribute name="id">
        <xsl:value-of select="concat('_', @Name)"/>
      </xsl:attribute>
      
      <xsl:choose>
        <xsl:when test="@Name">
          <ul>
            <xsl:for-each select="PlotSection">
              <li>
                <xsl:call-template name="PlotSection">
                  <xsl:with-param name="Tag" select="$Tag"/>
                </xsl:call-template>
              </li>
            </xsl:for-each>
          </ul>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="PlotSection">
            <xsl:call-template name="PlotSection">
              <xsl:with-param name="Tag" select="$Tag"/>
            </xsl:call-template>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      
    </span>
    
  </xsl:template>
  
  
  
  <!-- Deals with each plot section -->
  <xd:doc>Process each plot section entry inside a profiling page</xd:doc>
  <xsl:template name="PlotSection">
    <xsl:param name="Tag"/> 
  
    <xsl:variable name="vName" select="@Name"/>
    <xsl:variable name="hide">
      <xsl:choose>
        <xsl:when test="../@Name">true</xsl:when>
        <xsl:otherwise>false</xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    
    <xsl:call-template name="CreateCollapse">
      <xsl:with-param name="name">
        <xsl:choose>
          <xsl:when test="$MapNode/profiling_plots/entry[@key=$vName]">
            <xsl:call-template name="Map">
              <xsl:with-param name="map" select="$MapNode/profiling_plots"/>
              <xsl:with-param name="key" select="@Name"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="@Name"/>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="@Unit">
          &#160;<xsl:value-of select="@Unit"/>
        </xsl:if>
        <xsl:if test="$hide='false'">
          : <xsl:value-of select="count(Range/Entry)"/> cell(s)
        </xsl:if>
      </xsl:with-param>
      <xsl:with-param name="tag"  select="concat(../@Name, '_', @Name)"/>
      <xsl:with-param name="dir">..</xsl:with-param>
      <xsl:with-param name="hide"><xsl:value-of select="$hide"/></xsl:with-param>
    </xsl:call-template>
    
    <span class="branch">
      
      <xsl:attribute name="id">
        <xsl:value-of select="concat('_', ../@Name, '_', @Name)"/>
      </xsl:attribute>
      
      <xsl:if test="$hide='true'">
        <xsl:attribute name="class">hiddenBranch</xsl:attribute>
        <xsl:attribute name="hide">true</xsl:attribute>
      </xsl:if>
      
      <xsl:for-each select="Range">
        <xsl:call-template name="Range">
          <xsl:with-param name="hide">
            <xsl:choose>
              <xsl:when test="$hide='true'">false</xsl:when>
              <xsl:otherwise>true</xsl:otherwise>
            </xsl:choose>
          </xsl:with-param>
          <xsl:with-param name="Tag" select="$Tag"/>
        </xsl:call-template>
      </xsl:for-each>
      
    </span>
    
  </xsl:template>
  
  
  
  <xd:doc>
    Process each range inside a profiling entry
    <xd:param name="hide" type="boolean">defines if the range entry must start out hidden</xd:param>
  </xd:doc>
  <xsl:template name="Range">
    <xsl:param name="Tag"/> 
    
    <xsl:param name="hide"/>
    
    <ul>
      
      <xsl:if test="$DocType='PDF'">
        <xsl:attribute name="class">no_bullet</xsl:attribute>
      </xsl:if>
      
      <li>
        <a>
          
          <xsl:variable name="name">
            <xsl:value-of select="concat(../../@Name, '_', ../@Name, '_', @Name)"/>
          </xsl:variable>

          <xsl:attribute name="name">
            <xsl:value-of select="$name"/>
          </xsl:attribute>
          
          <xsl:variable name="cellCount" select="count(Entry)"/>
          
          <xsl:call-template name="CreateCollapse">
            <xsl:with-param name="name" select="concat('Range ', @Name, ': ', $cellCount, ' cell(s)')"/>
            <xsl:with-param name="tag"  select="$name"/>
            <xsl:with-param name="dir">..</xsl:with-param>
            <xsl:with-param name="textStyle">SubCaption</xsl:with-param>
            <xsl:with-param name="hide"><xsl:value-of select="$hide"/></xsl:with-param>
          </xsl:call-template>
          
          <span>
            
            <xsl:attribute name="id">
              <xsl:value-of select="concat('_', $name)"/>
            </xsl:attribute>
            
            <xsl:if test="$hide='true'">
              <xsl:attribute name="class">hiddenBranch</xsl:attribute>
              <xsl:attribute name="hide">true</xsl:attribute>
            </xsl:if>
            
            <ul>
              
              <xsl:if test="$DocType='PDF'">
                <xsl:attribute name="class">no_bullet</xsl:attribute>
              </xsl:if>
              
              <xsl:for-each select="Entry">
                <li>
                  <p>
                    <a>
                      <xsl:attribute name="title"><xsl:value-of select="@Trace"/></xsl:attribute>
                      <xsl:attribute name="href">
                        <xsl:value-of select="concat('../Cells/', @Name, '_', /Profilings/@CornerName, $Extensions/Cell, $Tag)"/>
                      </xsl:attribute>
                      <xsl:value-of select="@Name"/>
                    </a>: <xsl:choose>
                            <xsl:when test="$LibMode = $DevMode or $LibMode = $GroupedMode">
                              <xsl:value-of select="format-number(@Value, '0.000%')"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="@Value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                          <xsl:value-of select="../../../@Unit"/>
                  </p>
                </li>
              </xsl:for-each>
              
            </ul>
            
          </span>
          
        </a>
      </li>
      
    </ul>
  </xsl:template>
  
  
  
  <!-- Create Notes -->
  <xd:doc>Creates the Notes section at the bottom of the page. It is temporarily disabled until the links to other corners are fixed</xd:doc>
  <xsl:template name="Notes">
  
    <xsl:variable name="corner" select="@CornerName"/>
    <xsl:variable name="CornerContent">
      <xsl:call-template name="Corner">
        <xsl:with-param name="Corner"  select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
        <xsl:with-param name="Page"    select="/Profilings/@FullName"/>
        <xsl:with-param name="PDFLink" select="/Profilings/@FullName"/>
      </xsl:call-template>
    </xsl:variable>
  
    <xsl:if test="$CornerContent != ''">
      <a name="Notes">
        
        <xsl:call-template name="CreateCollapse">
          <xsl:with-param name="name" select="'Notes'"/>
          <xsl:with-param name="dir">..</xsl:with-param>
        </xsl:call-template>
        
        <span id="_Notes">
          <hr class="Title"/>
          <ul>
            <li>
              <xsl:call-template name="Corner">
                <xsl:with-param name="Corner"  select="$XmlCornerList/CornerList/Corner[@Name=$corner]"/>
                <xsl:with-param name="Page"    select="/Profilings/@FullName"/>
                <xsl:with-param name="PDFLink" select="/Profilings/@FullName"/>
              </xsl:call-template>
            </li>
          </ul>
        </span>
        
      </a>
    </xsl:if>
  </xsl:template>
  
</xsl:stylesheet>
