/* 
* ******************************************************************************
* *                                                                            *
* *                   Copyright (C) 1984-2024 Silvaco, Inc.                    *
* *                           All rights reserved.                             *
* *                                                                            *
* * The Silvaco name and the Silvaco logo are trademarks of Silvaco, Inc.      *
* * and/or its affiliates ("Silvaco"). All trademarks, logos, software marks,  *
* * and trade names (collectively, the "Marks") in this program are            *
* * proprietary to Silvaco or other respective owners that have granted        *
* * Silvaco the right and license to use such Marks. You are not permitted to  *
* * use the Marks without the prior written consent of Silvaco or such third   *
* * party that may own the Marks.                                              *
* *                                                                            *
* * This file has been provided pursuant to a license agreement containing     *
* * restrictions on its use. This file contains valuable trade secrets and     *
* * proprietary information of Silvaco and is protected by U.S. and            *
* * international laws.                                                        *
* *                                                                            *
* * The copyright notice(s) in this file do not indicate actual or intended    *
* * publication of this file.                                                  *
* *                                                                            *
* *                   Viola, 2024.0.0.C - build 202402091636                   *
* *                                                                            *
* ******************************************************************************
* 
* 
* Running on cafipdev for user Rodrigo Boesche (rodrigb).
* Local time is now Sat, 3 Aug 2024, 01:11:58.
* Main process id is 7172.
*
* Spice engine            : SmartSpice 5.5.2.C
* Liberty export type     : conditional
*
* Characterization Corner : FastFast_0p77_0
* Process                 : FastFast
* Temperature             : 0C
* Voltage                 : 0.77V
*
****************************************************************************/

library (asap7sc7p5t_SLVT_FastFast_0p77_0) {

  /* Documentation Attributes */
  date                    		: "Sat, 3 Aug 2024, 01:11:58";
  revision                		: "revision 1.0";
  comment                 		: "Copyright (C) 1984-2024 Silvaco, Inc. All rights reserved.";

  /* General Attributes */
  technology              		  (cmos);
  delay_model             		: table_lookup;
  in_place_swap_mode      		: match_footprint;
  library_features        		  (report_delay_calculation,report_power_calculation);

  /* Units Attributes */
  time_unit               		: "1ns";
  leakage_power_unit      		: "1pW";
  voltage_unit            		: "1V";
  current_unit            		: "1uA";
  pulling_resistance_unit 		: "1kohm";
  capacitive_load_unit    		  (1,pf);

  /* Operation Conditions */
  nom_process             		: 1.00;
  nom_temperature         		: 0.00;
  nom_voltage             		: 0.770;

  voltage_map (VDD,0.770);
  voltage_map (VSS,0.000);

  define(process_corner, operating_conditions, string);
  operating_conditions (FastFast_0p77_0) {
    process_corner	: "FastFast";
    process       	: 1.00;
    voltage       	: 0.770;
    temperature   	: 0.00;
    tree_type     	: balanced_tree;
  }
  default_operating_conditions : FastFast_0p77_0;

  /* Threshold Definitions */
  slew_lower_threshold_pct_fall 	: 30.00 ;
  slew_lower_threshold_pct_rise 	: 30.00 ;
  slew_upper_threshold_pct_fall 	: 70.00 ;
  slew_upper_threshold_pct_rise 	: 70.00 ;
  slew_derate_from_library      	: 0.50 ;
  input_threshold_pct_fall      	: 50.00 ;
  input_threshold_pct_rise      	: 50.00 ;
  output_threshold_pct_fall     	: 50.00 ;
  output_threshold_pct_rise     	: 50.00 ;
  default_leakage_power_density 	: 0.00 ;
  default_cell_leakage_power    	: 0.00 ;

  /* Default Pin Attributes */
  default_inout_pin_cap       		: 1.000000;
  default_input_pin_cap       		: 1.000000;
  default_output_pin_cap      		: 0.000000;
  default_fanout_load         		: 1.000000;
  default_max_transition      		: 0.320000;

  define(drive_strength, cell, float);
  define(ng_base_cell, cell, string);
  define(ng_basename, cell, string);
  define(ng_build_equation, cell, string);
  define(ng_nominal_skew, cell, float);
  define(ng_nominal_strength, cell, float);
  define(ng_variant_type, cell, string);

  /* Model Cards Information
   * /main/foundry/asu/asap7/source/asap7PDK_r1p7/models/hspice//7nm_FF.pm
   *  Last Modified: Mon Mar 20 10:31:34 2023
   */

  /* Silvaco Characterization Settings */
  define_group(char_settings, library);
  define_group(char_settings, cell);
  define(add_pin_cap_to_lut_indexes, char_settings, boolean);
  define(spice_version, char_settings, string);
  define(constrained_measure_capacitance, char_settings, string);
  define(input_slope_fall_level, char_settings, string);
  define(input_slope_fall_time, char_settings, string);
  define(input_slope_rise_level, char_settings, string);
  define(input_slope_rise_time, char_settings, string);
  define(power_integration_threshold, char_settings, string);
  define(arc_sensitization_reduction_threshold, char_settings, integer);
  define(bisect_targ, char_settings, string);
  define(bisect_targ_err, char_settings, string);
  define(bisection_itr_cnt, char_settings, integer);
  define(clear_preset_pw_char_settings, char_settings, string);
  define(delay, char_settings, string);
  define(enable_comb_hidden_power, char_settings, boolean);
  define(enable_comb_leakage, char_settings, boolean);
  define(enable_comb_onehot_daat_timing_power, char_settings, boolean);
  define(enable_comb_onehot_ts_timing_power, char_settings, boolean);
  define(enable_comb_timing_power, char_settings, boolean);
  define(enable_comb_tristate, char_settings, boolean);
  define(enable_hot_setup_gated, char_settings, boolean);
  define(enable_pulse_width, char_settings, boolean);
  define(enable_recovery_removal, char_settings, boolean);
  define(enable_seq_hidden_power, char_settings, boolean);
  define(enable_seq_input_cap, char_settings, boolean);
  define(enable_seq_leakage, char_settings, boolean);
  define(enable_seq_timing_power, char_settings, boolean);
  define(enable_setup_hold, char_settings, boolean);
  define(export_conditional_constrained_timing, char_settings, boolean);
  define(headroom, char_settings, string);
  define(max_no_of_hidden_power_states, char_settings, integer);
  define(max_no_of_state_dependent_leakage_states_in_export, char_settings, integer);
  define(nldm_input_cap_method, char_settings, integer);
  define(nldm_input_cap_rel_target_fall, char_settings, string);
  define(nldm_input_cap_rel_target_rise, char_settings, string);
  define(nldm_input_cap_rel_trigger_fall, char_settings, string);
  define(nldm_input_cap_rel_trigger_rise, char_settings, string);
  define(random_state_dependent_leakage_amount, char_settings, integer);
  define(random_state_dependent_leakage_select, char_settings, boolean);
  define(ripple_targ, char_settings, string);
  define(ripple_targ_err, char_settings, string);
  define(sensitization_timing_power, char_settings, string);
  define(subtract_switching_power_method, char_settings, string);
  define(tran_based_leakage_pw, char_settings, string);
  define(tran_based_leakage_step_size, char_settings, string);
  define(tristate_pulling_resistance_scaling, char_settings, string);
  define(use_bisect_targ_as_abs_value, char_settings, boolean);
  define(use_pwl_supplies_for_cmb, char_settings, boolean);
  define(use_pwl_supplies_for_seq, char_settings, boolean);
  define(worst_case_settling_time, char_settings, string);
  define(accuracy_leak_tran, char_settings, string);
  define(accuracy_opt, char_settings, string);
  define(accuracy_tran, char_settings, string);
  define(ccs_timing, char_settings, boolean);
  define(custom_step_size_leak_tran, char_settings, string);
  define(custom_step_size_opt, char_settings, string);
  define(custom_step_size_tran, char_settings, string);
  define(ecsm_timing, char_settings, boolean);
  define(enable_3d_power, char_settings, boolean);
  define(enable_3d_timing, char_settings, boolean);
  define(modelcards_md5, char_settings, string);
  define(omit_dont_care_from_sensitization, char_settings, boolean);
  define(spice_tool, char_settings, string);
  define(bisection_hspice_options, char_settings, string);
  define(bisection_spectre_tolerance, char_settings, string);
  define(custom, char_settings, string);

  char_settings("export_liberty_template") {
	add_pin_cap_to_lut_indexes : "true";
  }

  char_settings("spice_execution_template") {
	spice_version : "5.5.2.C";
  }

  char_settings("spice_lookup_tables_template") {
	constrained_measure_capacitance : "min";
	input_slope_fall_level : "";
	input_slope_fall_time : "";
	input_slope_rise_level : "";
	input_slope_rise_time : "";
	power_integration_threshold : "90";
  }

  char_settings("spice_measure_template") {
	arc_sensitization_reduction_threshold : 4;
	bisect_targ : "0.05";
	bisect_targ_err : "0.001";
	bisection_itr_cnt : 20;
	clear_preset_pw_char_settings : "0,1";
	delay : "3e-09";
	enable_comb_hidden_power : "true";
	enable_comb_leakage : "true";
	enable_comb_onehot_daat_timing_power : "true";
	enable_comb_onehot_ts_timing_power : "false";
	enable_comb_timing_power : "true";
	enable_comb_tristate : "true";
	enable_hot_setup_gated : "false";
	enable_pulse_width : "true";
	enable_recovery_removal : "true";
	enable_seq_hidden_power : "true";
	enable_seq_input_cap : "true";
	enable_seq_leakage : "true";
	enable_seq_timing_power : "true";
	enable_setup_hold : "true";
	export_conditional_constrained_timing : "false";
	headroom : "1e-09";
	max_no_of_hidden_power_states : 32;
	max_no_of_state_dependent_leakage_states_in_export : 1600;
	nldm_input_cap_method : 2;
	nldm_input_cap_rel_target_fall : "50";
	nldm_input_cap_rel_target_rise : "50";
	nldm_input_cap_rel_trigger_fall : "99";
	nldm_input_cap_rel_trigger_rise : "1";
	random_state_dependent_leakage_amount : 512;
	random_state_dependent_leakage_select : "true";
	ripple_targ : "0.1";
	ripple_targ_err : "0.025";
	sensitization_timing_power : "state_binning";
	subtract_switching_power_method : "rise_cycle";
	tran_based_leakage_pw : "0.005";
	tran_based_leakage_step_size : "tPW/100";
	tristate_pulling_resistance_scaling : "20";
	use_bisect_targ_as_abs_value : "false";
	use_pwl_supplies_for_cmb : "false";
	use_pwl_supplies_for_seq : "false";
	worst_case_settling_time : "1e-08";
  }

  char_settings("spice_template") {
	accuracy_leak_tran : "standard";
	accuracy_opt : "high";
	accuracy_tran : "high";
	ccs_timing : "false";
	custom_step_size_leak_tran : "0.5*tST";
	custom_step_size_opt : "10 ps";
	custom_step_size_tran : "1 ps";
	ecsm_timing : "false";
	enable_3d_power : "false";
	enable_3d_timing : "false";
	modelcards_md5 : "7nm_FF.pm,2e1bec30bd492e57dca63566ef209798";
	omit_dont_care_from_sensitization : "true";
	spice_tool : "Smartspice";
  }

  char_settings("spice_user_string_template") {
	bisection_hspice_options : "relin=10m relout=BISECT_TARG_ERR itropt=BISECT_ITR_CNT";
	bisection_spectre_tolerance : "tol = 10e-15";
	custom : "";
  }


  char_config() {
	internal_power_calculation : exclude_switching_on_rise;
	driver_waveform (all, "input_driver:rise");
	driver_waveform_rise : "input_driver:rise";
	driver_waveform_fall : "input_driver:fall";
	default_value_selection_method (all, max);
	default_value_selection_method (capacitance, average);
	capacitance_voltage_lower_threshold_pct_fall : 50.000000;
	capacitance_voltage_upper_threshold_pct_fall : 99.000000;
	capacitance_voltage_lower_threshold_pct_rise : 1.000000;
	capacitance_voltage_upper_threshold_pct_rise : 50.000000;
  }

  lu_table_template(waveform_template) {
	variable_1 : input_net_transition;
	variable_2 : normalized_voltage;
	index_1 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
	index_2 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:rise";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:fall";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }



  power_lut_template (Hidden_power_clock_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_clock_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  power_lut_template (Power_clock_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_clock_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Pulse_width_clock_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_clock_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Timing_clock_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_clock_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_fall_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_rise_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  /******************************************************************************************
   Module          	: C2MOS_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (C2MOS_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 14452.408142;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 14392.189949;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 17536.950984;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 15708.879787;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 14476.364091;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 12090.519546;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 14487.564528;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 14630.801391;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 12295.994858;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000584;
		fall_capacitance	: 0.000571;
		rise_capacitance	: 0.000598;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.004972,0.010098,0.011611,0.011861", \
				        "0.009869,0.015583,0.016961,0.016951", \
				        "0.014950,0.021365,0.022313,0.022231", \
				        "0.025179,0.033012,0.034298,0.033322");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.001310,-0.001171,-0.002321,-0.005275", \
				        "-0.002426,-0.001936,-0.003866,-0.008249", \
				        "-0.000085,-0.000291,-0.002963,-0.008458", \
				        "0.007519,0.006208,0.002330,-0.004606");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.002127,-0.003681,-0.002382,0.011555", \
				        "0.014667,0.007124,0.004252,0.005260", \
				        "0.023884,0.015022,0.010478,0.008697", \
				        "0.039613,0.028539,0.020968,0.015956");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.004512,0.003322,0.004373,0.007385", \
				        "0.009616,0.006053,0.006872,0.010601", \
				        "0.012204,0.008582,0.008847,0.012249", \
				        "0.020244,0.017010,0.015775,0.016557");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000713,0.000764,0.000921,0.001288,0.002066,0.003658,0.006870");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000365,0.000411,0.000557,0.000915,0.001688,0.003278,0.006491");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000718,0.000769,0.000926,0.001293,0.002071,0.003662,0.006875");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000361,0.000405,0.000552,0.000909,0.001683,0.003274,0.006488");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000157,0.000144,0.000142,0.000142,0.000142,0.000142,0.000142");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000132,-0.000132,-0.000132,-0.000133,-0.000133,-0.000133,-0.000133");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000136,0.000135,0.000136,0.000136,0.000137,0.000137,0.000137");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000117,-0.000128,-0.000129,-0.000130,-0.000130,-0.000131,-0.000130");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.000427;
		fall_capacitance	: 0.000417;
		rise_capacitance	: 0.000437;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.011781,0.031750,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.013789,0.031750,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001005,0.001006,0.001053,0.001178,0.001464,0.002077,0.003331");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000615,0.000615,0.000654,0.000765,0.001035,0.001633,0.002882");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001573,0.001572,0.001620,0.001744,0.002030,0.002637,0.003873");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001373,0.001372,0.001426,0.001571,0.001899,0.002587,0.003962");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000971,0.000970,0.001018,0.001144,0.001432,0.002043,0.003299");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000632,0.000632,0.000671,0.000782,0.001050,0.001644,0.002889");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.077416;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.025486,0.032939,0.039132,0.050984,0.074580,0.121811,0.216388", \
				        "0.026442,0.033894,0.040089,0.051944,0.075539,0.122772,0.217275", \
				        "0.027487,0.034944,0.041132,0.053000,0.076586,0.123813,0.218197", \
				        "0.028878,0.036333,0.042528,0.054382,0.077975,0.125184,0.219751", \
				        "0.030657,0.038118,0.044287,0.056168,0.079727,0.126921,0.221616", \
				        "0.032449,0.039906,0.046100,0.057925,0.081473,0.128677,0.223151", \
				        "0.033072,0.040526,0.046721,0.058565,0.082171,0.129397,0.223504");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.022918,0.030314,0.036924,0.049920,0.075942,0.127999,0.232089", \
				        "0.023869,0.031270,0.037886,0.050888,0.076855,0.128967,0.233108", \
				        "0.024983,0.032383,0.039002,0.051983,0.078004,0.130042,0.234157", \
				        "0.026476,0.033879,0.040492,0.053500,0.079449,0.131578,0.235708", \
				        "0.028385,0.035782,0.042392,0.055401,0.081371,0.133302,0.237110", \
				        "0.030337,0.037734,0.044350,0.057336,0.083255,0.135121,0.239155", \
				        "0.031402,0.038783,0.045396,0.058385,0.084394,0.136290,0.240181");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.004565,0.013873,0.024164,0.045767,0.089952,0.178965,0.355639", \
				        "0.004566,0.013873,0.024162,0.045778,0.089990,0.178923,0.355211", \
				        "0.004578,0.013881,0.024127,0.045706,0.090026,0.178716,0.355712", \
				        "0.004564,0.013883,0.024164,0.045758,0.089927,0.178545,0.356788", \
				        "0.004597,0.013863,0.024089,0.045650,0.089836,0.178255,0.357000", \
				        "0.004556,0.013882,0.024162,0.045655,0.089783,0.178616,0.354890", \
				        "0.004587,0.013865,0.024157,0.045781,0.090053,0.177823,0.355386");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.004159,0.015272,0.027466,0.052893,0.104251,0.206941,0.411524", \
				        "0.004182,0.015290,0.027345,0.052519,0.103372,0.207316,0.412827", \
				        "0.004179,0.015293,0.027420,0.052805,0.103942,0.207007,0.412206", \
				        "0.004187,0.015286,0.027410,0.052545,0.103601,0.207320,0.412558", \
				        "0.004186,0.015243,0.027349,0.052597,0.104169,0.205398,0.410639", \
				        "0.004212,0.015311,0.027444,0.052906,0.103227,0.205975,0.409418", \
				        "0.004231,0.015332,0.027473,0.052898,0.103794,0.204852,0.411090");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001320,0.001384,0.001389,0.001388,0.001387,0.001386,0.001386", \
				        "0.001321,0.001384,0.001390,0.001389,0.001388,0.001387,0.001386", \
				        "0.001364,0.001427,0.001432,0.001431,0.001430,0.001429,0.001429", \
				        "0.001479,0.001543,0.001549,0.001548,0.001547,0.001546,0.001546", \
				        "0.001756,0.001819,0.001828,0.001824,0.001823,0.001823,0.001822", \
				        "0.002348,0.002434,0.002440,0.002440,0.002439,0.002437,0.002436", \
				        "0.003347,0.003557,0.003648,0.003709,0.003715,0.003715,0.003715");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001265,0.001299,0.001305,0.001310,0.001322,0.001348,0.001393", \
				        "0.001265,0.001303,0.001303,0.001304,0.001310,0.001350,0.001407", \
				        "0.001306,0.001343,0.001345,0.001349,0.001358,0.001390,0.001446", \
				        "0.001421,0.001458,0.001459,0.001463,0.001471,0.001506,0.001563", \
				        "0.001699,0.001738,0.001739,0.001743,0.001759,0.001763,0.001819", \
				        "0.002286,0.002355,0.002360,0.002362,0.002368,0.002386,0.002421", \
				        "0.003302,0.003503,0.003600,0.003667,0.003672,0.003686,0.003724");
			}
		}
	}

  }


  /******************************************************************************************
   Module          	: TG_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (TG_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 23894.998638;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 20847.986797;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 28428.154233;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 26853.937382;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 21303.705182;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 20377.195848;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 27434.515533;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 25993.261898;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 19921.232228;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000607;
		fall_capacitance	: 0.000577;
		rise_capacitance	: 0.000638;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.001685,-0.009154,0.006575,0.009645", \
				        "-0.014537,-0.028604,-0.035231,-0.043255", \
				        "-0.021993,-0.039887,-0.049997,-0.063121", \
				        "-0.033944,-0.057009,-0.070441,-0.090677");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.002680,-0.003808,-0.005934,-0.010389", \
				        "-0.005183,-0.003969,-0.005857,-0.010250", \
				        "-0.001932,0.000615,-0.000578,-0.002674", \
				        "0.007243,0.013392,0.015790,0.020479");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.011073,0.019949,0.027670,0.040956", \
				        "0.027544,0.037339,0.047227,0.063178", \
				        "0.038354,0.049187,0.060381,0.079134", \
				        "0.056049,0.068833,0.080982,0.103569");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.009421,0.007388,0.009975,0.015840", \
				        "0.016321,0.011872,0.013715,0.019760", \
				        "0.017185,0.012210,0.013548,0.019880", \
				        "0.014931,0.009395,0.009860,0.016272");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.001150,0.001254,0.001447,0.001880,0.002799,0.004673,0.008434");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000824,0.000913,0.001089,0.001501,0.002399,0.004259,0.008019");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.001158,0.001263,0.001455,0.001888,0.002807,0.004679,0.008438");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000797,0.000887,0.001063,0.001476,0.002376,0.004238,0.008002");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000444,0.000570,0.000768,0.001183,0.002029,0.003737,0.007159");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000077,0.000031,0.000222,0.000632,0.001475,0.003181,0.006612");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000449,0.000575,0.000774,0.001189,0.002033,0.003739,0.007163");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000082,0.000026,0.000217,0.000626,0.001470,0.003178,0.006611");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.001445;
		fall_capacitance	: 0.001418;
		rise_capacitance	: 0.001472;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.011186,0.031750,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.010941,0.031750,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000976,0.000969,0.001039,0.001213,0.001602,0.002416,0.004088");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000034,0.000025,0.000081,0.000236,0.000601,0.001395,0.003051");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001773,0.001759,0.001887,0.002214,0.002935,0.004397,0.007377");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.002088,0.002083,0.002180,0.002439,0.003010,0.004252,0.006859");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001008,0.001006,0.001080,0.001253,0.001642,0.002458,0.004134");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("-0.000061,-0.000067,-0.000009,0.000148,0.000515,0.001311,0.002969");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.077597;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.010759,0.017460,0.023409,0.035173,0.058662,0.105710,0.199497", \
				        "0.011681,0.018380,0.024333,0.036085,0.059572,0.106628,0.200462", \
				        "0.012447,0.019148,0.025098,0.036859,0.060345,0.107282,0.201191", \
				        "0.013365,0.020066,0.026035,0.037784,0.061289,0.108314,0.202179", \
				        "0.014524,0.021253,0.027214,0.038959,0.062422,0.109432,0.203307", \
				        "0.015225,0.022006,0.027974,0.039726,0.063201,0.110077,0.203945", \
				        "0.014101,0.020963,0.026922,0.038645,0.062113,0.109136,0.202769");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.014158,0.021146,0.027690,0.040697,0.066701,0.118776,0.222808", \
				        "0.015118,0.022109,0.028653,0.041659,0.067665,0.119740,0.223765", \
				        "0.016390,0.023389,0.029935,0.042944,0.068972,0.121049,0.224913", \
				        "0.018571,0.025547,0.032086,0.045097,0.071087,0.123159,0.227251", \
				        "0.020477,0.027467,0.034004,0.046995,0.073058,0.125082,0.229070", \
				        "0.021773,0.028761,0.035297,0.048305,0.074279,0.126104,0.230330", \
				        "0.021609,0.028589,0.035136,0.048137,0.074187,0.126015,0.229632");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.002687,0.012407,0.023097,0.044978,0.088701,0.176846,0.350894", \
				        "0.002705,0.012418,0.023013,0.044799,0.088574,0.176803,0.351078", \
				        "0.002739,0.012434,0.023098,0.044792,0.088655,0.175944,0.350843", \
				        "0.002785,0.012430,0.023055,0.044920,0.088883,0.176882,0.351294", \
				        "0.002890,0.012504,0.023084,0.044752,0.088708,0.176644,0.351184", \
				        "0.003074,0.012610,0.023110,0.044741,0.088320,0.176567,0.351378", \
				        "0.003376,0.012737,0.023169,0.044927,0.088397,0.175644,0.351464");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.002974,0.014274,0.026789,0.052461,0.103500,0.206541,0.412094", \
				        "0.002963,0.014278,0.026786,0.052462,0.103519,0.206566,0.412082", \
				        "0.002950,0.014279,0.026831,0.052429,0.103900,0.207041,0.411562", \
				        "0.002927,0.014306,0.026842,0.052471,0.103183,0.206097,0.412187", \
				        "0.002949,0.014296,0.026769,0.052341,0.103956,0.206276,0.411883", \
				        "0.002969,0.014277,0.026789,0.052343,0.103082,0.205573,0.410311", \
				        "0.003006,0.014333,0.026818,0.052244,0.103691,0.204625,0.409463");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000751,0.000962,0.000976,0.000983,0.000988,0.000991,0.000994", \
				        "0.000736,0.000954,0.000968,0.000971,0.000974,0.000978,0.000981", \
				        "0.000842,0.001061,0.001076,0.001082,0.001088,0.001091,0.001093", \
				        "0.001151,0.001366,0.001372,0.001379,0.001397,0.001390,0.001393", \
				        "0.001794,0.002020,0.002037,0.002042,0.002051,0.002056,0.002055", \
				        "0.002880,0.003269,0.003325,0.003321,0.003333,0.003338,0.003341", \
				        "0.004721,0.005300,0.005548,0.005785,0.005837,0.005841,0.005846");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001345,0.001523,0.001537,0.001547,0.001556,0.001592,0.001646", \
				        "0.001325,0.001504,0.001518,0.001527,0.001537,0.001572,0.001626", \
				        "0.001390,0.001567,0.001580,0.001592,0.001608,0.001638,0.001688", \
				        "0.001618,0.001790,0.001804,0.001813,0.001815,0.001851,0.001913", \
				        "0.002156,0.002300,0.002305,0.002312,0.002336,0.002361,0.002419", \
				        "0.003140,0.003412,0.003423,0.003403,0.003403,0.003433,0.003472", \
				        "0.004805,0.005313,0.005515,0.005657,0.005650,0.005661,0.005680");
			}
		}
	}

  }

}
/*
* End of file
*/
