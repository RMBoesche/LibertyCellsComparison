/* 
* ******************************************************************************
* *                                                                            *
* *                   Copyright (C) 1984-2024 Silvaco, Inc.                    *
* *                           All rights reserved.                             *
* *                                                                            *
* * The Silvaco name and the Silvaco logo are trademarks of Silvaco, Inc.      *
* * and/or its affiliates ("Silvaco"). All trademarks, logos, software marks,  *
* * and trade names (collectively, the "Marks") in this program are            *
* * proprietary to Silvaco or other respective owners that have granted        *
* * Silvaco the right and license to use such Marks. You are not permitted to  *
* * use the Marks without the prior written consent of Silvaco or such third   *
* * party that may own the Marks.                                              *
* *                                                                            *
* * This file has been provided pursuant to a license agreement containing     *
* * restrictions on its use. This file contains valuable trade secrets and     *
* * proprietary information of Silvaco and is protected by U.S. and            *
* * international laws.                                                        *
* *                                                                            *
* * The copyright notice(s) in this file do not indicate actual or intended    *
* * publication of this file.                                                  *
* *                                                                            *
* *                   Viola, 2024.0.0.C - build 202402091636                   *
* *                                                                            *
* ******************************************************************************
* 
* 
* Running on cafipdev for user Rodrigo Boesche (rodrigb).
* Local time is now Sat, 3 Aug 2024, 01:20:58.
* Main process id is 16572.
*
* Spice engine            : SmartSpice 5.5.2.C
* Liberty export type     : conditional
*
* Characterization Corner : TypTyp_0p70_25
* Process                 : TypTyp
* Temperature             : 25C
* Voltage                 : 0.70V
*
****************************************************************************/

library (asap7sc7p5t_SLVT_TypTyp_0p70_25) {

  /* Documentation Attributes */
  date                    		: "Sat, 3 Aug 2024, 01:20:58";
  revision                		: "revision 1.0";
  comment                 		: "Copyright (C) 1984-2024 Silvaco, Inc. All rights reserved.";

  /* General Attributes */
  technology              		  (cmos);
  delay_model             		: table_lookup;
  in_place_swap_mode      		: match_footprint;
  library_features        		  (report_delay_calculation,report_power_calculation);

  /* Units Attributes */
  time_unit               		: "1ns";
  leakage_power_unit      		: "1pW";
  voltage_unit            		: "1V";
  current_unit            		: "1uA";
  pulling_resistance_unit 		: "1kohm";
  capacitive_load_unit    		  (1,pf);

  /* Operation Conditions */
  nom_process             		: 1.00;
  nom_temperature         		: 25.00;
  nom_voltage             		: 0.700;

  voltage_map (VDD,0.700);
  voltage_map (VSS,0.000);

  define(process_corner, operating_conditions, string);
  operating_conditions (TypTyp_0p70_25) {
    process_corner	: "TypTyp";
    process       	: 1.00;
    voltage       	: 0.700;
    temperature   	: 25.00;
    tree_type     	: balanced_tree;
  }
  default_operating_conditions : TypTyp_0p70_25;

  /* Threshold Definitions */
  slew_lower_threshold_pct_fall 	: 30.00 ;
  slew_lower_threshold_pct_rise 	: 30.00 ;
  slew_upper_threshold_pct_fall 	: 70.00 ;
  slew_upper_threshold_pct_rise 	: 70.00 ;
  slew_derate_from_library      	: 0.50 ;
  input_threshold_pct_fall      	: 50.00 ;
  input_threshold_pct_rise      	: 50.00 ;
  output_threshold_pct_fall     	: 50.00 ;
  output_threshold_pct_rise     	: 50.00 ;
  default_leakage_power_density 	: 0.00 ;
  default_cell_leakage_power    	: 0.00 ;

  /* Default Pin Attributes */
  default_inout_pin_cap       		: 1.000000;
  default_input_pin_cap       		: 1.000000;
  default_output_pin_cap      		: 0.000000;
  default_fanout_load         		: 1.000000;
  default_max_transition      		: 0.320000;

  define(drive_strength, cell, float);
  define(ng_base_cell, cell, string);
  define(ng_basename, cell, string);
  define(ng_build_equation, cell, string);
  define(ng_nominal_skew, cell, float);
  define(ng_nominal_strength, cell, float);
  define(ng_variant_type, cell, string);

  /* Model Cards Information
   * /main/foundry/asu/asap7/source/asap7PDK_r1p7/models/hspice//7nm_TT.pm
   *  Last Modified: Mon Mar 20 10:31:34 2023
   */

  /* Silvaco Characterization Settings */
  define_group(char_settings, library);
  define_group(char_settings, cell);
  define(add_pin_cap_to_lut_indexes, char_settings, boolean);
  define(spice_version, char_settings, string);
  define(constrained_measure_capacitance, char_settings, string);
  define(input_slope_fall_level, char_settings, string);
  define(input_slope_fall_time, char_settings, string);
  define(input_slope_rise_level, char_settings, string);
  define(input_slope_rise_time, char_settings, string);
  define(power_integration_threshold, char_settings, string);
  define(arc_sensitization_reduction_threshold, char_settings, integer);
  define(bisect_targ, char_settings, string);
  define(bisect_targ_err, char_settings, string);
  define(bisection_itr_cnt, char_settings, integer);
  define(clear_preset_pw_char_settings, char_settings, string);
  define(delay, char_settings, string);
  define(enable_comb_hidden_power, char_settings, boolean);
  define(enable_comb_leakage, char_settings, boolean);
  define(enable_comb_onehot_daat_timing_power, char_settings, boolean);
  define(enable_comb_onehot_ts_timing_power, char_settings, boolean);
  define(enable_comb_timing_power, char_settings, boolean);
  define(enable_comb_tristate, char_settings, boolean);
  define(enable_hot_setup_gated, char_settings, boolean);
  define(enable_pulse_width, char_settings, boolean);
  define(enable_recovery_removal, char_settings, boolean);
  define(enable_seq_hidden_power, char_settings, boolean);
  define(enable_seq_input_cap, char_settings, boolean);
  define(enable_seq_leakage, char_settings, boolean);
  define(enable_seq_timing_power, char_settings, boolean);
  define(enable_setup_hold, char_settings, boolean);
  define(export_conditional_constrained_timing, char_settings, boolean);
  define(headroom, char_settings, string);
  define(max_no_of_hidden_power_states, char_settings, integer);
  define(max_no_of_state_dependent_leakage_states_in_export, char_settings, integer);
  define(nldm_input_cap_method, char_settings, integer);
  define(nldm_input_cap_rel_target_fall, char_settings, string);
  define(nldm_input_cap_rel_target_rise, char_settings, string);
  define(nldm_input_cap_rel_trigger_fall, char_settings, string);
  define(nldm_input_cap_rel_trigger_rise, char_settings, string);
  define(random_state_dependent_leakage_amount, char_settings, integer);
  define(random_state_dependent_leakage_select, char_settings, boolean);
  define(ripple_targ, char_settings, string);
  define(ripple_targ_err, char_settings, string);
  define(sensitization_timing_power, char_settings, string);
  define(subtract_switching_power_method, char_settings, string);
  define(tran_based_leakage_pw, char_settings, string);
  define(tran_based_leakage_step_size, char_settings, string);
  define(tristate_pulling_resistance_scaling, char_settings, string);
  define(use_bisect_targ_as_abs_value, char_settings, boolean);
  define(use_pwl_supplies_for_cmb, char_settings, boolean);
  define(use_pwl_supplies_for_seq, char_settings, boolean);
  define(worst_case_settling_time, char_settings, string);
  define(accuracy_leak_tran, char_settings, string);
  define(accuracy_opt, char_settings, string);
  define(accuracy_tran, char_settings, string);
  define(ccs_timing, char_settings, boolean);
  define(custom_step_size_leak_tran, char_settings, string);
  define(custom_step_size_opt, char_settings, string);
  define(custom_step_size_tran, char_settings, string);
  define(ecsm_timing, char_settings, boolean);
  define(enable_3d_power, char_settings, boolean);
  define(enable_3d_timing, char_settings, boolean);
  define(modelcards_md5, char_settings, string);
  define(omit_dont_care_from_sensitization, char_settings, boolean);
  define(spice_tool, char_settings, string);
  define(bisection_hspice_options, char_settings, string);
  define(bisection_spectre_tolerance, char_settings, string);
  define(custom, char_settings, string);

  char_settings("export_liberty_template") {
	add_pin_cap_to_lut_indexes : "true";
  }

  char_settings("spice_execution_template") {
	spice_version : "5.5.2.C";
  }

  char_settings("spice_lookup_tables_template") {
	constrained_measure_capacitance : "min";
	input_slope_fall_level : "";
	input_slope_fall_time : "";
	input_slope_rise_level : "";
	input_slope_rise_time : "";
	power_integration_threshold : "90";
  }

  char_settings("spice_measure_template") {
	arc_sensitization_reduction_threshold : 4;
	bisect_targ : "0.05";
	bisect_targ_err : "0.001";
	bisection_itr_cnt : 20;
	clear_preset_pw_char_settings : "0,1";
	delay : "3e-09";
	enable_comb_hidden_power : "true";
	enable_comb_leakage : "true";
	enable_comb_onehot_daat_timing_power : "true";
	enable_comb_onehot_ts_timing_power : "false";
	enable_comb_timing_power : "true";
	enable_comb_tristate : "true";
	enable_hot_setup_gated : "false";
	enable_pulse_width : "true";
	enable_recovery_removal : "true";
	enable_seq_hidden_power : "true";
	enable_seq_input_cap : "true";
	enable_seq_leakage : "true";
	enable_seq_timing_power : "true";
	enable_setup_hold : "true";
	export_conditional_constrained_timing : "false";
	headroom : "1e-09";
	max_no_of_hidden_power_states : 32;
	max_no_of_state_dependent_leakage_states_in_export : 1600;
	nldm_input_cap_method : 2;
	nldm_input_cap_rel_target_fall : "50";
	nldm_input_cap_rel_target_rise : "50";
	nldm_input_cap_rel_trigger_fall : "99";
	nldm_input_cap_rel_trigger_rise : "1";
	random_state_dependent_leakage_amount : 512;
	random_state_dependent_leakage_select : "true";
	ripple_targ : "0.1";
	ripple_targ_err : "0.025";
	sensitization_timing_power : "state_binning";
	subtract_switching_power_method : "rise_cycle";
	tran_based_leakage_pw : "0.005";
	tran_based_leakage_step_size : "tPW/100";
	tristate_pulling_resistance_scaling : "20";
	use_bisect_targ_as_abs_value : "false";
	use_pwl_supplies_for_cmb : "false";
	use_pwl_supplies_for_seq : "false";
	worst_case_settling_time : "1e-08";
  }

  char_settings("spice_template") {
	accuracy_leak_tran : "standard";
	accuracy_opt : "high";
	accuracy_tran : "high";
	ccs_timing : "false";
	custom_step_size_leak_tran : "0.5*tST";
	custom_step_size_opt : "10 ps";
	custom_step_size_tran : "1 ps";
	ecsm_timing : "false";
	enable_3d_power : "false";
	enable_3d_timing : "false";
	modelcards_md5 : "7nm_TT.pm,0d7181c2481dafa4b93dbd9ff5737105";
	omit_dont_care_from_sensitization : "true";
	spice_tool : "Smartspice";
  }

  char_settings("spice_user_string_template") {
	bisection_hspice_options : "relin=10m relout=BISECT_TARG_ERR itropt=BISECT_ITR_CNT";
	bisection_spectre_tolerance : "tol = 10e-15";
	custom : "";
  }


  char_config() {
	internal_power_calculation : exclude_switching_on_rise;
	driver_waveform (all, "input_driver:rise");
	driver_waveform_rise : "input_driver:rise";
	driver_waveform_fall : "input_driver:fall";
	default_value_selection_method (all, max);
	default_value_selection_method (capacitance, average);
	capacitance_voltage_lower_threshold_pct_fall : 50.000000;
	capacitance_voltage_upper_threshold_pct_fall : 99.000000;
	capacitance_voltage_lower_threshold_pct_rise : 1.000000;
	capacitance_voltage_upper_threshold_pct_rise : 50.000000;
  }

  lu_table_template(waveform_template) {
	variable_1 : input_net_transition;
	variable_2 : normalized_voltage;
	index_1 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
	index_2 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:rise";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:fall";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }



  power_lut_template (Hidden_power_clock_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_clock_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  power_lut_template (Power_clock_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_clock_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Pulse_width_clock_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_clock_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Timing_clock_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_clock_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_fall_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_rise_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  /******************************************************************************************
   Module          	: C2MOS_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (C2MOS_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 22535.330787;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 22540.285303;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 26050.979990;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 25668.037120;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 22388.270434;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 19296.623438;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 22655.432031;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 22603.999218;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 19079.018764;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000513;
		fall_capacitance	: 0.000503;
		rise_capacitance	: 0.000523;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.006272,0.012718,0.014941,0.016242", \
				        "0.010090,0.017665,0.020198,0.021299", \
				        "0.014349,0.022814,0.025555,0.026848", \
				        "0.023186,0.033705,0.036882,0.038122");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.001754,-0.000867,-0.001818,-0.004684", \
				        "-0.003924,-0.002121,-0.003472,-0.007208", \
				        "-0.002383,-0.000993,-0.003011,-0.007644", \
				        "0.004253,0.004852,0.001879,-0.004379");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.002402,-0.005396,-0.007523,0.008445", \
				        "0.016467,0.007730,0.003783,0.002770", \
				        "0.026803,0.017316,0.012019,0.008697", \
				        "0.044095,0.033173,0.025585,0.018841");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.006164,0.003592,0.004390,0.007050", \
				        "0.012004,0.006953,0.007175,0.010135", \
				        "0.014609,0.009552,0.009391,0.012178", \
				        "0.019248,0.014976,0.014390,0.015476");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000535,0.000547,0.000621,0.000807,0.001211,0.002047,0.003740");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000281,0.000292,0.000358,0.000534,0.000933,0.001769,0.003465");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000540,0.000552,0.000626,0.000811,0.001215,0.002050,0.003742");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000277,0.000288,0.000354,0.000530,0.000929,0.001766,0.003463");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000113,0.000102,0.000101,0.000100,0.000101,0.000101,0.000102");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000094,-0.000094,-0.000094,-0.000094,-0.000094,-0.000095,-0.000095");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000096,0.000096,0.000096,0.000096,0.000096,0.000096,0.000096");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000081,-0.000090,-0.000091,-0.000091,-0.000092,-0.000092,-0.000091");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.000375;
		fall_capacitance	: 0.000367;
		rise_capacitance	: 0.000383;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.015599,0.031750,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.016771,0.031750,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000784,0.000775,0.000795,0.000855,0.000999,0.001313,0.001964");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000482,0.000475,0.000490,0.000542,0.000675,0.000979,0.001627");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001218,0.001209,0.001228,0.001287,0.001429,0.001742,0.002386");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001050,0.001040,0.001061,0.001132,0.001299,0.001655,0.002379");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000749,0.000741,0.000759,0.000819,0.000965,0.001278,0.001930");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000498,0.000493,0.000508,0.000559,0.000691,0.000994,0.001640");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.056057;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.032534,0.042485,0.050566,0.066015,0.096731,0.158540,0.281803", \
				        "0.033614,0.043564,0.051647,0.067108,0.097868,0.159579,0.283160", \
				        "0.034932,0.044885,0.052966,0.068423,0.099167,0.160935,0.284409", \
				        "0.036811,0.046762,0.054844,0.070297,0.101025,0.162823,0.286190", \
				        "0.039190,0.049140,0.057225,0.072680,0.103414,0.165136,0.288338", \
				        "0.041773,0.051723,0.059817,0.075272,0.105968,0.167721,0.291217", \
				        "0.043577,0.053540,0.061592,0.077083,0.107820,0.169068,0.291963");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.028697,0.038941,0.048093,0.066143,0.102247,0.174663,0.319350", \
				        "0.029789,0.040035,0.049182,0.067259,0.103442,0.175468,0.319671", \
				        "0.031130,0.041381,0.050529,0.068605,0.104789,0.176829,0.321053", \
				        "0.033121,0.043363,0.052512,0.070573,0.106704,0.178986,0.323582", \
				        "0.035597,0.045827,0.054981,0.073047,0.109185,0.181685,0.326338", \
				        "0.038353,0.048603,0.057745,0.075809,0.111882,0.184259,0.328977", \
				        "0.040437,0.050662,0.059789,0.077830,0.113935,0.185902,0.330136");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.005879,0.017974,0.031211,0.058887,0.116143,0.230553,0.459529", \
				        "0.005877,0.018010,0.031162,0.059104,0.115844,0.230060,0.459874", \
				        "0.005878,0.017987,0.031200,0.059032,0.116009,0.230329,0.459843", \
				        "0.005879,0.017985,0.031209,0.058940,0.116101,0.230472,0.459718", \
				        "0.005804,0.018009,0.031188,0.058998,0.116071,0.230665,0.459304", \
				        "0.005872,0.018012,0.031186,0.058719,0.116061,0.230509,0.459810", \
				        "0.005868,0.017992,0.031212,0.059066,0.115984,0.228371,0.458674");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.005277,0.020681,0.037632,0.072126,0.143775,0.282305,0.562679", \
				        "0.005277,0.020712,0.037659,0.072568,0.143943,0.285144,0.566967", \
				        "0.005272,0.020714,0.037660,0.072581,0.143925,0.285220,0.567163", \
				        "0.005262,0.020688,0.037631,0.072276,0.144150,0.282630,0.562585", \
				        "0.005284,0.020658,0.037445,0.072733,0.142325,0.285290,0.566667", \
				        "0.005286,0.020745,0.037677,0.072163,0.142314,0.286537,0.562786", \
				        "0.005357,0.020691,0.037625,0.072220,0.142456,0.282181,0.565841");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001005,0.001062,0.001066,0.001067,0.001067,0.001067,0.001066", \
				        "0.000999,0.001055,0.001060,0.001061,0.001061,0.001061,0.001060", \
				        "0.001016,0.001072,0.001077,0.001078,0.001078,0.001077,0.001077", \
				        "0.001071,0.001127,0.001132,0.001133,0.001133,0.001133,0.001132", \
				        "0.001209,0.001268,0.001273,0.001273,0.001273,0.001272,0.001272", \
				        "0.001518,0.001581,0.001589,0.001589,0.001586,0.001591,0.001584", \
				        "0.002087,0.002207,0.002241,0.002250,0.002251,0.002252,0.002250");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000959,0.000998,0.000999,0.001012,0.001023,0.001059,0.001123", \
				        "0.000954,0.000992,0.000996,0.001003,0.001024,0.001039,0.001067", \
				        "0.000970,0.001008,0.001012,0.001019,0.001040,0.001056,0.001087", \
				        "0.001024,0.001062,0.001065,0.001076,0.001093,0.001120,0.001180", \
				        "0.001161,0.001201,0.001206,0.001211,0.001230,0.001267,0.001282", \
				        "0.001470,0.001517,0.001518,0.001518,0.001541,0.001581,0.001639", \
				        "0.002037,0.002156,0.002183,0.002204,0.002211,0.002236,0.002260");
			}
		}
	}

  }


  /******************************************************************************************
   Module          	: TG_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (TG_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 37241.306759;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 32265.220917;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 42638.350681;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 42106.985331;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 32113.114654;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 32035.309816;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 42457.232469;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 42127.709057;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 32186.531144;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000527;
		fall_capacitance	: 0.000499;
		rise_capacitance	: 0.000555;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.002114,-0.010571,-0.012967,0.012131", \
				        "-0.017037,-0.030696,-0.037430,-0.045499", \
				        "-0.025687,-0.042673,-0.052405,-0.065245", \
				        "-0.039370,-0.061077,-0.073776,-0.093190");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.003223,-0.003898,-0.005793,-0.010088", \
				        "-0.007407,-0.006022,-0.007206,-0.011267", \
				        "-0.004810,-0.002828,-0.003154,-0.006569", \
				        "0.003700,0.007391,0.009420,0.012307");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.013964,0.022489,0.030636,0.044560", \
				        "0.032558,0.041243,0.051177,0.067617", \
				        "0.044837,0.054193,0.065070,0.083760", \
				        "0.064737,0.075558,0.087215,0.109037");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.011731,0.008285,0.010453,0.016069", \
				        "0.020656,0.014886,0.015719,0.021046", \
				        "0.022531,0.016511,0.016515,0.021680", \
				        "0.021627,0.015399,0.014375,0.019156");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000861,0.000901,0.000997,0.001217,0.001691,0.002670,0.004647");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000605,0.000640,0.000726,0.000932,0.001393,0.002363,0.004341");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000868,0.000908,0.001004,0.001223,0.001696,0.002673,0.004647");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000597,0.000632,0.000718,0.000925,0.001386,0.002358,0.004339");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000345,0.000396,0.000497,0.000714,0.001157,0.002057,0.003871");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000049,-0.000008,0.000088,0.000298,0.000740,0.001640,0.003456");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000349,0.000400,0.000502,0.000718,0.001160,0.002058,0.003865");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000054,-0.000012,0.000083,0.000294,0.000737,0.001639,0.003457");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.001289;
		fall_capacitance	: 0.001268;
		rise_capacitance	: 0.001310;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.014377,0.031750,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.013736,0.031750,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000759,0.000739,0.000769,0.000857,0.001053,0.001473,0.002350");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000064,0.000047,0.000068,0.000142,0.000323,0.000730,0.001593");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001353,0.001318,0.001376,0.001538,0.001919,0.002698,0.004289");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001584,0.001563,0.001609,0.001741,0.002042,0.002691,0.004077");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000765,0.000747,0.000779,0.000866,0.001065,0.001487,0.002364");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("-0.000041,-0.000057,-0.000034,0.000041,0.000225,0.000633,0.001497");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.056203;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.013389,0.022168,0.029911,0.045239,0.075929,0.137420,0.259964", \
				        "0.014388,0.023166,0.030919,0.046254,0.076968,0.138441,0.260627", \
				        "0.015453,0.024228,0.031981,0.047314,0.078007,0.139414,0.262020", \
				        "0.016607,0.025409,0.033165,0.048514,0.079218,0.140478,0.263412", \
				        "0.018127,0.026945,0.034721,0.050013,0.080686,0.141819,0.264760", \
				        "0.019388,0.028259,0.036055,0.051373,0.081921,0.143185,0.265923", \
				        "0.019033,0.028020,0.035828,0.051154,0.081806,0.142964,0.265275");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.017737,0.027384,0.036465,0.054514,0.090747,0.163050,0.306974", \
				        "0.018814,0.028461,0.037532,0.055612,0.091766,0.164196,0.308147", \
				        "0.020251,0.029903,0.038984,0.057029,0.093276,0.165518,0.309666", \
				        "0.022928,0.032568,0.041655,0.059700,0.095954,0.168030,0.312648", \
				        "0.025765,0.035411,0.044478,0.062534,0.098713,0.170802,0.315779", \
				        "0.027967,0.037606,0.046677,0.064735,0.100770,0.172987,0.318002", \
				        "0.028739,0.038378,0.047455,0.065529,0.101576,0.173515,0.318084");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.003432,0.016012,0.029786,0.058116,0.114809,0.227809,0.455121", \
				        "0.003431,0.016033,0.029857,0.058079,0.114411,0.228016,0.454863", \
				        "0.003466,0.015998,0.029845,0.058102,0.114774,0.227466,0.455121", \
				        "0.003505,0.016086,0.029814,0.057969,0.114599,0.228299,0.454027", \
				        "0.003611,0.016124,0.029710,0.057964,0.114631,0.228054,0.454927", \
				        "0.003813,0.016190,0.029892,0.057946,0.114092,0.226794,0.454057", \
				        "0.004149,0.016385,0.029939,0.058079,0.114095,0.226227,0.452258");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.003858,0.019546,0.036925,0.072260,0.143332,0.282738,0.567588", \
				        "0.003860,0.019559,0.036874,0.072210,0.143716,0.284002,0.564290", \
				        "0.003850,0.019535,0.036929,0.072250,0.143209,0.282132,0.568780", \
				        "0.003785,0.019509,0.036934,0.072045,0.142807,0.282646,0.565809", \
				        "0.003831,0.019455,0.036831,0.071888,0.141661,0.284985,0.567228", \
				        "0.003865,0.019557,0.036873,0.071562,0.141494,0.282971,0.566452", \
				        "0.003889,0.019546,0.036900,0.072240,0.142014,0.281104,0.570483");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000592,0.000746,0.000755,0.000761,0.000764,0.000767,0.000769", \
				        "0.000560,0.000720,0.000730,0.000736,0.000740,0.000742,0.000744", \
				        "0.000600,0.000761,0.000775,0.000780,0.000784,0.000787,0.000789", \
				        "0.000744,0.000903,0.000921,0.000927,0.000925,0.000934,0.000926", \
				        "0.001099,0.001256,0.001261,0.001282,0.001275,0.001277,0.001291", \
				        "0.001713,0.001943,0.001955,0.001954,0.001963,0.001967,0.001968", \
				        "0.002738,0.003106,0.003226,0.003302,0.003302,0.003311,0.003314");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001014,0.001141,0.001152,0.001157,0.001183,0.001215,0.001239", \
				        "0.000991,0.001120,0.001134,0.001138,0.001163,0.001197,0.001227", \
				        "0.001024,0.001151,0.001162,0.001168,0.001193,0.001224,0.001272", \
				        "0.001127,0.001253,0.001261,0.001273,0.001295,0.001317,0.001318", \
				        "0.001424,0.001528,0.001538,0.001550,0.001568,0.001590,0.001663", \
				        "0.001974,0.002115,0.002109,0.002111,0.002125,0.002148,0.002229", \
				        "0.002918,0.003214,0.003289,0.003307,0.003315,0.003324,0.003404");
			}
		}
	}

  }

}
/*
* End of file
*/
