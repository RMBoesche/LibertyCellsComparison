/* 
* ******************************************************************************
* *                                                                            *
* *                   Copyright (C) 1984-2024 Silvaco, Inc.                    *
* *                           All rights reserved.                             *
* *                                                                            *
* * The Silvaco name and the Silvaco logo are trademarks of Silvaco, Inc.      *
* * and/or its affiliates ("Silvaco"). All trademarks, logos, software marks,  *
* * and trade names (collectively, the "Marks") in this program are            *
* * proprietary to Silvaco or other respective owners that have granted        *
* * Silvaco the right and license to use such Marks. You are not permitted to  *
* * use the Marks without the prior written consent of Silvaco or such third   *
* * party that may own the Marks.                                              *
* *                                                                            *
* * This file has been provided pursuant to a license agreement containing     *
* * restrictions on its use. This file contains valuable trade secrets and     *
* * proprietary information of Silvaco and is protected by U.S. and            *
* * international laws.                                                        *
* *                                                                            *
* * The copyright notice(s) in this file do not indicate actual or intended    *
* * publication of this file.                                                  *
* *                                                                            *
* *                   Viola, 2024.0.0.C - build 202402091636                   *
* *                                                                            *
* ******************************************************************************
* 
* 
* Running on cafipdev for user Rodrigo Boesche (rodrigb).
* Local time is now Sat, 3 Aug 2024, 00:47:14.
* Main process id is 5403.
*
* Spice engine            : SmartSpice 5.5.2.C
* Liberty export type     : conditional
*
* Characterization Corner : FastFast_0p77_0
* Process                 : FastFast
* Temperature             : 0C
* Voltage                 : 0.77V
*
****************************************************************************/

library (asap7sc7p5t_RVT_FastFast_0p77_0) {

  /* Documentation Attributes */
  date                    		: "Sat, 3 Aug 2024, 00:47:14";
  revision                		: "revision 1.0";
  comment                 		: "Copyright (C) 1984-2024 Silvaco, Inc. All rights reserved.";

  /* General Attributes */
  technology              		  (cmos);
  delay_model             		: table_lookup;
  in_place_swap_mode      		: match_footprint;
  library_features        		  (report_delay_calculation,report_power_calculation);

  /* Units Attributes */
  time_unit               		: "1ns";
  leakage_power_unit      		: "1pW";
  voltage_unit            		: "1V";
  current_unit            		: "1uA";
  pulling_resistance_unit 		: "1kohm";
  capacitive_load_unit    		  (1,pf);

  /* Operation Conditions */
  nom_process             		: 1.00;
  nom_temperature         		: 0.00;
  nom_voltage             		: 0.770;

  voltage_map (VDD,0.770);
  voltage_map (VSS,0.000);

  define(process_corner, operating_conditions, string);
  operating_conditions (FastFast_0p77_0) {
    process_corner	: "FastFast";
    process       	: 1.00;
    voltage       	: 0.770;
    temperature   	: 0.00;
    tree_type     	: balanced_tree;
  }
  default_operating_conditions : FastFast_0p77_0;

  /* Threshold Definitions */
  slew_lower_threshold_pct_fall 	: 30.00 ;
  slew_lower_threshold_pct_rise 	: 30.00 ;
  slew_upper_threshold_pct_fall 	: 70.00 ;
  slew_upper_threshold_pct_rise 	: 70.00 ;
  slew_derate_from_library      	: 0.50 ;
  input_threshold_pct_fall      	: 50.00 ;
  input_threshold_pct_rise      	: 50.00 ;
  output_threshold_pct_fall     	: 50.00 ;
  output_threshold_pct_rise     	: 50.00 ;
  default_leakage_power_density 	: 0.00 ;
  default_cell_leakage_power    	: 0.00 ;

  /* Default Pin Attributes */
  default_inout_pin_cap       		: 1.000000;
  default_input_pin_cap       		: 1.000000;
  default_output_pin_cap      		: 0.000000;
  default_fanout_load         		: 1.000000;
  default_max_transition      		: 0.320000;

  define(drive_strength, cell, float);
  define(ng_base_cell, cell, string);
  define(ng_basename, cell, string);
  define(ng_build_equation, cell, string);
  define(ng_nominal_skew, cell, float);
  define(ng_nominal_strength, cell, float);
  define(ng_variant_type, cell, string);

  /* Model Cards Information
   * /main/foundry/asu/asap7/source/asap7PDK_r1p7/models/hspice//7nm_FF.pm
   *  Last Modified: Mon Mar 20 10:31:34 2023
   */

  /* Silvaco Characterization Settings */
  define_group(char_settings, library);
  define_group(char_settings, cell);
  define(add_pin_cap_to_lut_indexes, char_settings, boolean);
  define(spice_version, char_settings, string);
  define(constrained_measure_capacitance, char_settings, string);
  define(input_slope_fall_level, char_settings, string);
  define(input_slope_fall_time, char_settings, string);
  define(input_slope_rise_level, char_settings, string);
  define(input_slope_rise_time, char_settings, string);
  define(power_integration_threshold, char_settings, string);
  define(arc_sensitization_reduction_threshold, char_settings, integer);
  define(bisect_targ, char_settings, string);
  define(bisect_targ_err, char_settings, string);
  define(bisection_itr_cnt, char_settings, integer);
  define(clear_preset_pw_char_settings, char_settings, string);
  define(delay, char_settings, string);
  define(enable_comb_hidden_power, char_settings, boolean);
  define(enable_comb_leakage, char_settings, boolean);
  define(enable_comb_onehot_daat_timing_power, char_settings, boolean);
  define(enable_comb_onehot_ts_timing_power, char_settings, boolean);
  define(enable_comb_timing_power, char_settings, boolean);
  define(enable_comb_tristate, char_settings, boolean);
  define(enable_hot_setup_gated, char_settings, boolean);
  define(enable_pulse_width, char_settings, boolean);
  define(enable_recovery_removal, char_settings, boolean);
  define(enable_seq_hidden_power, char_settings, boolean);
  define(enable_seq_input_cap, char_settings, boolean);
  define(enable_seq_leakage, char_settings, boolean);
  define(enable_seq_timing_power, char_settings, boolean);
  define(enable_setup_hold, char_settings, boolean);
  define(export_conditional_constrained_timing, char_settings, boolean);
  define(headroom, char_settings, string);
  define(max_no_of_hidden_power_states, char_settings, integer);
  define(max_no_of_state_dependent_leakage_states_in_export, char_settings, integer);
  define(nldm_input_cap_method, char_settings, integer);
  define(nldm_input_cap_rel_target_fall, char_settings, string);
  define(nldm_input_cap_rel_target_rise, char_settings, string);
  define(nldm_input_cap_rel_trigger_fall, char_settings, string);
  define(nldm_input_cap_rel_trigger_rise, char_settings, string);
  define(random_state_dependent_leakage_amount, char_settings, integer);
  define(random_state_dependent_leakage_select, char_settings, boolean);
  define(ripple_targ, char_settings, string);
  define(ripple_targ_err, char_settings, string);
  define(sensitization_timing_power, char_settings, string);
  define(subtract_switching_power_method, char_settings, string);
  define(tran_based_leakage_pw, char_settings, string);
  define(tran_based_leakage_step_size, char_settings, string);
  define(tristate_pulling_resistance_scaling, char_settings, string);
  define(use_bisect_targ_as_abs_value, char_settings, boolean);
  define(use_pwl_supplies_for_cmb, char_settings, boolean);
  define(use_pwl_supplies_for_seq, char_settings, boolean);
  define(worst_case_settling_time, char_settings, string);
  define(accuracy_leak_tran, char_settings, string);
  define(accuracy_opt, char_settings, string);
  define(accuracy_tran, char_settings, string);
  define(ccs_timing, char_settings, boolean);
  define(custom_step_size_leak_tran, char_settings, string);
  define(custom_step_size_opt, char_settings, string);
  define(custom_step_size_tran, char_settings, string);
  define(ecsm_timing, char_settings, boolean);
  define(enable_3d_power, char_settings, boolean);
  define(enable_3d_timing, char_settings, boolean);
  define(modelcards_md5, char_settings, string);
  define(omit_dont_care_from_sensitization, char_settings, boolean);
  define(spice_tool, char_settings, string);
  define(bisection_hspice_options, char_settings, string);
  define(bisection_spectre_tolerance, char_settings, string);
  define(custom, char_settings, string);

  char_settings("export_liberty_template") {
	add_pin_cap_to_lut_indexes : "true";
  }

  char_settings("spice_execution_template") {
	spice_version : "5.5.2.C";
  }

  char_settings("spice_lookup_tables_template") {
	constrained_measure_capacitance : "min";
	input_slope_fall_level : "";
	input_slope_fall_time : "";
	input_slope_rise_level : "";
	input_slope_rise_time : "";
	power_integration_threshold : "90";
  }

  char_settings("spice_measure_template") {
	arc_sensitization_reduction_threshold : 4;
	bisect_targ : "0.05";
	bisect_targ_err : "0.001";
	bisection_itr_cnt : 20;
	clear_preset_pw_char_settings : "0,1";
	delay : "3e-09";
	enable_comb_hidden_power : "true";
	enable_comb_leakage : "true";
	enable_comb_onehot_daat_timing_power : "true";
	enable_comb_onehot_ts_timing_power : "false";
	enable_comb_timing_power : "true";
	enable_comb_tristate : "true";
	enable_hot_setup_gated : "false";
	enable_pulse_width : "true";
	enable_recovery_removal : "true";
	enable_seq_hidden_power : "true";
	enable_seq_input_cap : "true";
	enable_seq_leakage : "true";
	enable_seq_timing_power : "true";
	enable_setup_hold : "true";
	export_conditional_constrained_timing : "false";
	headroom : "1e-09";
	max_no_of_hidden_power_states : 32;
	max_no_of_state_dependent_leakage_states_in_export : 1600;
	nldm_input_cap_method : 2;
	nldm_input_cap_rel_target_fall : "50";
	nldm_input_cap_rel_target_rise : "50";
	nldm_input_cap_rel_trigger_fall : "99";
	nldm_input_cap_rel_trigger_rise : "1";
	random_state_dependent_leakage_amount : 512;
	random_state_dependent_leakage_select : "true";
	ripple_targ : "0.1";
	ripple_targ_err : "0.025";
	sensitization_timing_power : "state_binning";
	subtract_switching_power_method : "rise_cycle";
	tran_based_leakage_pw : "0.005";
	tran_based_leakage_step_size : "tPW/100";
	tristate_pulling_resistance_scaling : "20";
	use_bisect_targ_as_abs_value : "false";
	use_pwl_supplies_for_cmb : "false";
	use_pwl_supplies_for_seq : "false";
	worst_case_settling_time : "1e-08";
  }

  char_settings("spice_template") {
	accuracy_leak_tran : "standard";
	accuracy_opt : "high";
	accuracy_tran : "high";
	ccs_timing : "false";
	custom_step_size_leak_tran : "0.5*tST";
	custom_step_size_opt : "10 ps";
	custom_step_size_tran : "1 ps";
	ecsm_timing : "false";
	enable_3d_power : "false";
	enable_3d_timing : "false";
	modelcards_md5 : "7nm_FF.pm,2e1bec30bd492e57dca63566ef209798";
	omit_dont_care_from_sensitization : "true";
	spice_tool : "Smartspice";
  }

  char_settings("spice_user_string_template") {
	bisection_hspice_options : "relin=10m relout=BISECT_TARG_ERR itropt=BISECT_ITR_CNT";
	bisection_spectre_tolerance : "tol = 10e-15";
	custom : "";
  }


  char_config() {
	internal_power_calculation : exclude_switching_on_rise;
	driver_waveform (all, "input_driver:rise");
	driver_waveform_rise : "input_driver:rise";
	driver_waveform_fall : "input_driver:fall";
	default_value_selection_method (all, max);
	default_value_selection_method (capacitance, average);
	capacitance_voltage_lower_threshold_pct_fall : 50.000000;
	capacitance_voltage_upper_threshold_pct_fall : 99.000000;
	capacitance_voltage_lower_threshold_pct_rise : 1.000000;
	capacitance_voltage_upper_threshold_pct_rise : 50.000000;
  }

  lu_table_template(waveform_template) {
	variable_1 : input_net_transition;
	variable_2 : normalized_voltage;
	index_1 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
	index_2 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:rise";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:fall";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }



  power_lut_template (Hidden_power_clock_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_clock_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  power_lut_template (Power_clock_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_clock_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Pulse_width_clock_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_clock_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Timing_clock_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_clock_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_fall_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_rise_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  /******************************************************************************************
   Module          	: C2MOS_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (C2MOS_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 150.629370;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 143.760503;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 189.263534;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 143.758850;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 164.801641;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 133.548538;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 146.392237;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 148.733896;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 134.775764;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000513;
		fall_capacitance	: 0.000498;
		rise_capacitance	: 0.000528;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.006816,0.017677,0.022919,0.029057", \
				        "-0.004135,0.009522,0.016464,0.024167", \
				        "-0.010566,0.003696,0.012250,0.021654", \
				        "-0.020271,-0.006228,0.004493,0.016977");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.002504,0.001572,0.002803,0.003649", \
				        "-0.010191,-0.004311,-0.002704,-0.001715", \
				        "-0.012596,-0.006486,-0.004775,-0.003553", \
				        "-0.014320,-0.008247,-0.006699,-0.005773");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.001117,-0.011398,-0.017277,-0.023924", \
				        "0.018157,0.005228,-0.002082,-0.011004", \
				        "0.028435,0.015199,0.007760,-0.001891", \
				        "0.043929,0.030065,0.022411,0.011990");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.006868,0.000996,-0.000669,-0.001970", \
				        "0.017019,0.008090,0.005738,0.004005", \
				        "0.021050,0.011273,0.008553,0.006407", \
				        "0.025114,0.014806,0.011851,0.009707");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000639,0.000618,0.000619,0.000643,0.000722,0.000911,0.001311");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000349,0.000332,0.000332,0.000348,0.000413,0.000591,0.000990");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000645,0.000623,0.000625,0.000649,0.000727,0.000916,0.001317");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000336,0.000319,0.000320,0.000337,0.000403,0.000584,0.000983");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000135,0.000122,0.000121,0.000121,0.000121,0.000120,0.000120");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000001,-0.000001,-0.000001,-0.000001,-0.000001,-0.000001,-0.000001");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000121,0.000120,0.000120,0.000121,0.000121,0.000121,0.000121");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000002,-0.000002,-0.000002,-0.000002,-0.000002,-0.000002,-0.000003");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.000369;
		fall_capacitance	: 0.000366;
		rise_capacitance	: 0.000371;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.016171,0.032005,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.018195,0.031750,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000914,0.000893,0.000884,0.000884,0.000907,0.000971,0.001123");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000583,0.000565,0.000555,0.000552,0.000568,0.000625,0.000762");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001468,0.001447,0.001437,0.001435,0.001454,0.001514,0.001659");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001239,0.001217,0.001206,0.001203,0.001226,0.001298,0.001465");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000894,0.000872,0.000863,0.000864,0.000887,0.000952,0.001102");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000594,0.000578,0.000569,0.000566,0.000583,0.000635,0.000770");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.062798;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.034803,0.044903,0.052597,0.067223,0.096287,0.154392,0.270609", \
				        "0.036453,0.046552,0.054248,0.068883,0.097951,0.156193,0.272504", \
				        "0.038404,0.048500,0.056194,0.070821,0.099893,0.158138,0.274489", \
				        "0.041633,0.051719,0.059422,0.074047,0.103097,0.161610,0.277507", \
				        "0.046006,0.056107,0.063804,0.078430,0.107471,0.165700,0.281921", \
				        "0.051672,0.061775,0.069485,0.084086,0.113104,0.171533,0.287314", \
				        "0.058606,0.068722,0.076394,0.091047,0.120070,0.177844,0.294215");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.030091,0.040338,0.048767,0.065213,0.097990,0.163783,0.295077", \
				        "0.031768,0.042016,0.050445,0.066894,0.099673,0.165460,0.296755", \
				        "0.033733,0.043978,0.052411,0.068859,0.101584,0.167414,0.298681", \
				        "0.037120,0.047364,0.055811,0.072275,0.105046,0.170688,0.301693", \
				        "0.041738,0.051991,0.060433,0.076909,0.109746,0.175130,0.306102", \
				        "0.047771,0.058027,0.066460,0.082893,0.115719,0.181101,0.312548", \
				        "0.055157,0.065415,0.073850,0.090321,0.123004,0.188371,0.319825");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.004871,0.016723,0.029025,0.054774,0.107303,0.213227,0.424084", \
				        "0.004871,0.016723,0.029029,0.054829,0.107406,0.213320,0.424813", \
				        "0.004870,0.016700,0.029029,0.054781,0.107357,0.213316,0.424939", \
				        "0.004876,0.016724,0.029022,0.054748,0.107464,0.214550,0.425928", \
				        "0.004872,0.016706,0.029029,0.054777,0.107681,0.213960,0.426025", \
				        "0.004870,0.016704,0.029009,0.054755,0.107686,0.214570,0.425490", \
				        "0.004877,0.016723,0.029030,0.054771,0.107455,0.212578,0.424854");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.004828,0.018792,0.033891,0.065436,0.128641,0.255163,0.508290", \
				        "0.004828,0.018790,0.033885,0.065431,0.128650,0.255154,0.508274", \
				        "0.004827,0.018787,0.033913,0.065453,0.128552,0.255220,0.508312", \
				        "0.004826,0.018776,0.034030,0.065380,0.128025,0.255181,0.507485", \
				        "0.004829,0.018814,0.034008,0.065214,0.128516,0.253767,0.505509", \
				        "0.004845,0.018818,0.033931,0.065316,0.128219,0.254820,0.508010", \
				        "0.004859,0.018857,0.034007,0.065056,0.127798,0.253770,0.508252");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001083,0.001240,0.001260,0.001271,0.001276,0.001280,0.001281", \
				        "0.001064,0.001221,0.001242,0.001252,0.001258,0.001261,0.001263", \
				        "0.001054,0.001211,0.001232,0.001242,0.001248,0.001251,0.001253", \
				        "0.001051,0.001209,0.001228,0.001240,0.001245,0.001249,0.001251", \
				        "0.001069,0.001227,0.001248,0.001259,0.001264,0.001268,0.001271", \
				        "0.001130,0.001285,0.001307,0.001317,0.001323,0.001327,0.001328", \
				        "0.001275,0.001434,0.001452,0.001465,0.001467,0.001470,0.001476");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001058,0.001183,0.001202,0.001213,0.001234,0.001255,0.001301", \
				        "0.001043,0.001168,0.001187,0.001198,0.001219,0.001240,0.001288", \
				        "0.001032,0.001157,0.001176,0.001185,0.001211,0.001224,0.001273", \
				        "0.001025,0.001150,0.001166,0.001185,0.001206,0.001230,0.001309", \
				        "0.001036,0.001162,0.001181,0.001196,0.001211,0.001257,0.001325", \
				        "0.001090,0.001213,0.001232,0.001242,0.001270,0.001307,0.001354", \
				        "0.001225,0.001350,0.001370,0.001384,0.001394,0.001421,0.001456");
			}
		}
	}

  }


  /******************************************************************************************
   Module          	: TG_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (TG_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 258.961137;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 229.410719;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 313.232000;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 267.724597;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 278.165222;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 251.821295;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 292.266627;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 236.001914;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 203.066722;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000511;
		fall_capacitance	: 0.000500;
		rise_capacitance	: 0.000522;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.004960,-0.012738,-0.015661,-0.019875", \
				        "-0.023065,-0.032280,-0.036880,-0.043406", \
				        "-0.032388,-0.042379,-0.047910,-0.055934", \
				        "-0.046289,-0.057254,-0.063846,-0.074137");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.003070,-0.001863,-0.001871,-0.003029", \
				        "-0.014501,-0.012083,-0.011085,-0.011753", \
				        "-0.017096,-0.016057,-0.014194,-0.014359", \
				        "-0.017780,-0.019558,-0.016809,-0.016200");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.014698,0.022553,0.028000,0.036574", \
				        "0.036306,0.043215,0.049300,0.058946", \
				        "0.048315,0.054811,0.060947,0.071265", \
				        "0.066287,0.072732,0.078905,0.090109");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.012297,0.005220,0.004439,0.004850", \
				        "0.028067,0.018156,0.015680,0.015373", \
				        "0.034629,0.024495,0.020774,0.019641", \
				        "0.041481,0.031760,0.026912,0.024640");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.001023,0.000998,0.001008,0.001047,0.001148,0.001376,0.001865");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000762,0.000739,0.000744,0.000775,0.000863,0.001074,0.001542");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.001031,0.001007,0.001017,0.001056,0.001156,0.001386,0.001873");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000703,0.000679,0.000684,0.000716,0.000806,0.001016,0.001484");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000430,0.000410,0.000432,0.000483,0.000597,0.000838,0.001327");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000003,-0.000003,-0.000003,-0.000003,0.000090,0.000323,0.000811");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000435,0.000416,0.000437,0.000489,0.000603,0.000844,0.001336");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000002,-0.000002,-0.000002,-0.000002,0.000084,0.000318,0.000806");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.001283;
		fall_capacitance	: 0.001279;
		rise_capacitance	: 0.001286;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.015171,0.031750,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.014835,0.031750,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000924,0.000881,0.000876,0.000889,0.000932,0.001030,0.001250");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000019,-0.000004,-0.000004,-0.000004,0.000011,0.000098,0.000301");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001636,0.001560,0.001543,0.001558,0.001635,0.001828,0.002246");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001869,0.001831,0.001836,0.001872,0.001955,0.002124,0.002479");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000952,0.000913,0.000909,0.000923,0.000966,0.001066,0.001284");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("-0.000003,-0.000003,-0.000003,-0.000003,-0.000003,0.000038,0.000244");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.062904;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.014356,0.022877,0.030209,0.044656,0.073674,0.131398,0.247384", \
				        "0.015792,0.024312,0.031647,0.046113,0.075106,0.132855,0.248269", \
				        "0.017542,0.026061,0.033399,0.047844,0.076859,0.134537,0.250592", \
				        "0.019821,0.028386,0.035731,0.050180,0.079069,0.137044,0.252641", \
				        "0.022854,0.031391,0.038739,0.053201,0.082089,0.139949,0.255768", \
				        "0.026929,0.035530,0.042905,0.057374,0.086186,0.143878,0.259257", \
				        "0.031758,0.040542,0.047919,0.062400,0.091314,0.149124,0.264281");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.019463,0.028655,0.036951,0.053326,0.086186,0.151496,0.282823", \
				        "0.021125,0.030313,0.038611,0.054993,0.087845,0.153100,0.284509", \
				        "0.023208,0.032404,0.040694,0.057082,0.089909,0.155484,0.286211", \
				        "0.026947,0.036148,0.044437,0.060821,0.093659,0.159172,0.290119", \
				        "0.031705,0.040889,0.049182,0.065578,0.098341,0.163903,0.295079", \
				        "0.037134,0.046336,0.054615,0.071017,0.103671,0.169412,0.300569", \
				        "0.043138,0.052331,0.060632,0.077043,0.109857,0.175019,0.306394");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.003103,0.014898,0.027715,0.053833,0.106463,0.211721,0.421562", \
				        "0.003110,0.014896,0.027722,0.053815,0.106448,0.211711,0.421247", \
				        "0.003119,0.014900,0.027721,0.053833,0.106448,0.211674,0.421743", \
				        "0.003145,0.014922,0.027727,0.053819,0.106087,0.211125,0.421654", \
				        "0.003187,0.014898,0.027650,0.053678,0.106251,0.211266,0.421485", \
				        "0.003301,0.014981,0.027743,0.053813,0.105885,0.210755,0.420248", \
				        "0.003585,0.015104,0.027757,0.053694,0.106299,0.209861,0.419057");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.003436,0.017626,0.033285,0.064938,0.128010,0.254432,0.506328", \
				        "0.003425,0.017612,0.033274,0.064935,0.128064,0.254263,0.506507", \
				        "0.003432,0.017664,0.033294,0.064893,0.127714,0.254757,0.504561", \
				        "0.003428,0.017660,0.033295,0.064901,0.127796,0.254772,0.505313", \
				        "0.003407,0.017610,0.033180,0.064770,0.128185,0.253603,0.507694", \
				        "0.003427,0.017629,0.033175,0.064452,0.128103,0.254744,0.507600", \
				        "0.003452,0.017679,0.033134,0.064848,0.128139,0.254665,0.506776");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000703,0.000909,0.000924,0.000933,0.000938,0.000942,0.000945", \
				        "0.000630,0.000842,0.000857,0.000866,0.000871,0.000875,0.000879", \
				        "0.000603,0.000820,0.000835,0.000844,0.000849,0.000853,0.000857", \
				        "0.000600,0.000816,0.000843,0.000847,0.000851,0.000862,0.000866", \
				        "0.000673,0.000868,0.000893,0.000905,0.000912,0.000918,0.000926", \
				        "0.000848,0.001062,0.001065,0.001073,0.001084,0.001091,0.001092", \
				        "0.001174,0.001428,0.001445,0.001447,0.001444,0.001455,0.001456");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.001093,0.001271,0.001287,0.001298,0.001316,0.001356,0.001422", \
				        "0.001068,0.001246,0.001261,0.001274,0.001290,0.001334,0.001368", \
				        "0.001068,0.001245,0.001262,0.001273,0.001297,0.001306,0.001387", \
				        "0.001087,0.001266,0.001284,0.001294,0.001312,0.001335,0.001414", \
				        "0.001164,0.001328,0.001345,0.001360,0.001369,0.001413,0.001427", \
				        "0.001337,0.001494,0.001486,0.001499,0.001502,0.001530,0.001573", \
				        "0.001647,0.001832,0.001835,0.001827,0.001829,0.001820,0.001890");
			}
		}
	}

  }

}
/*
* End of file
*/
