/* 
* ******************************************************************************
* *                                                                            *
* *                   Copyright (C) 1984-2024 Silvaco, Inc.                    *
* *                           All rights reserved.                             *
* *                                                                            *
* * The Silvaco name and the Silvaco logo are trademarks of Silvaco, Inc.      *
* * and/or its affiliates ("Silvaco"). All trademarks, logos, software marks,  *
* * and trade names (collectively, the "Marks") in this program are            *
* * proprietary to Silvaco or other respective owners that have granted        *
* * Silvaco the right and license to use such Marks. You are not permitted to  *
* * use the Marks without the prior written consent of Silvaco or such third   *
* * party that may own the Marks.                                              *
* *                                                                            *
* * This file has been provided pursuant to a license agreement containing     *
* * restrictions on its use. This file contains valuable trade secrets and     *
* * proprietary information of Silvaco and is protected by U.S. and            *
* * international laws.                                                        *
* *                                                                            *
* * The copyright notice(s) in this file do not indicate actual or intended    *
* * publication of this file.                                                  *
* *                                                                            *
* *                   Viola, 2024.0.0.C - build 202402091636                   *
* *                                                                            *
* ******************************************************************************
* 
* 
* Running on cafipdev for user Rodrigo Boesche (rodrigb).
* Local time is now Sat, 3 Aug 2024, 01:03:46.
* Main process id is 8668.
*
* Spice engine            : SmartSpice 5.5.2.C
* Liberty export type     : conditional
*
* Characterization Corner : SlowSlow_0p63_100
* Process                 : SlowSlow
* Temperature             : 100C
* Voltage                 : 0.63V
*
****************************************************************************/

library (asap7sc7p5t_LVT_SlowSlow_0p63_100) {

  /* Documentation Attributes */
  date                    		: "Sat, 3 Aug 2024, 01:03:46";
  revision                		: "revision 1.0";
  comment                 		: "Copyright (C) 1984-2024 Silvaco, Inc. All rights reserved.";

  /* General Attributes */
  technology              		  (cmos);
  delay_model             		: table_lookup;
  in_place_swap_mode      		: match_footprint;
  library_features        		  (report_delay_calculation,report_power_calculation);

  /* Units Attributes */
  time_unit               		: "1ns";
  leakage_power_unit      		: "1pW";
  voltage_unit            		: "1V";
  current_unit            		: "1uA";
  pulling_resistance_unit 		: "1kohm";
  capacitive_load_unit    		  (1,pf);

  /* Operation Conditions */
  nom_process             		: 1.00;
  nom_temperature         		: 100.00;
  nom_voltage             		: 0.630;

  voltage_map (VDD,0.630);
  voltage_map (VSS,0.000);

  define(process_corner, operating_conditions, string);
  operating_conditions (SlowSlow_0p63_100) {
    process_corner	: "SlowSlow";
    process       	: 1.00;
    voltage       	: 0.630;
    temperature   	: 100.00;
    tree_type     	: balanced_tree;
  }
  default_operating_conditions : SlowSlow_0p63_100;

  /* Threshold Definitions */
  slew_lower_threshold_pct_fall 	: 30.00 ;
  slew_lower_threshold_pct_rise 	: 30.00 ;
  slew_upper_threshold_pct_fall 	: 70.00 ;
  slew_upper_threshold_pct_rise 	: 70.00 ;
  slew_derate_from_library      	: 0.50 ;
  input_threshold_pct_fall      	: 50.00 ;
  input_threshold_pct_rise      	: 50.00 ;
  output_threshold_pct_fall     	: 50.00 ;
  output_threshold_pct_rise     	: 50.00 ;
  default_leakage_power_density 	: 0.00 ;
  default_cell_leakage_power    	: 0.00 ;

  /* Default Pin Attributes */
  default_inout_pin_cap       		: 1.000000;
  default_input_pin_cap       		: 1.000000;
  default_output_pin_cap      		: 0.000000;
  default_fanout_load         		: 1.000000;
  default_max_transition      		: 0.320000;

  define(drive_strength, cell, float);
  define(ng_base_cell, cell, string);
  define(ng_basename, cell, string);
  define(ng_build_equation, cell, string);
  define(ng_nominal_skew, cell, float);
  define(ng_nominal_strength, cell, float);
  define(ng_variant_type, cell, string);

  /* Model Cards Information
   * /main/foundry/asu/asap7/source/asap7PDK_r1p7/models/hspice//7nm_SS.pm
   *  Last Modified: Mon Mar 20 10:31:34 2023
   */

  /* Silvaco Characterization Settings */
  define_group(char_settings, library);
  define_group(char_settings, cell);
  define(add_pin_cap_to_lut_indexes, char_settings, boolean);
  define(spice_version, char_settings, string);
  define(constrained_measure_capacitance, char_settings, string);
  define(input_slope_fall_level, char_settings, string);
  define(input_slope_fall_time, char_settings, string);
  define(input_slope_rise_level, char_settings, string);
  define(input_slope_rise_time, char_settings, string);
  define(power_integration_threshold, char_settings, string);
  define(arc_sensitization_reduction_threshold, char_settings, integer);
  define(bisect_targ, char_settings, string);
  define(bisect_targ_err, char_settings, string);
  define(bisection_itr_cnt, char_settings, integer);
  define(clear_preset_pw_char_settings, char_settings, string);
  define(delay, char_settings, string);
  define(enable_comb_hidden_power, char_settings, boolean);
  define(enable_comb_leakage, char_settings, boolean);
  define(enable_comb_onehot_daat_timing_power, char_settings, boolean);
  define(enable_comb_onehot_ts_timing_power, char_settings, boolean);
  define(enable_comb_timing_power, char_settings, boolean);
  define(enable_comb_tristate, char_settings, boolean);
  define(enable_hot_setup_gated, char_settings, boolean);
  define(enable_pulse_width, char_settings, boolean);
  define(enable_recovery_removal, char_settings, boolean);
  define(enable_seq_hidden_power, char_settings, boolean);
  define(enable_seq_input_cap, char_settings, boolean);
  define(enable_seq_leakage, char_settings, boolean);
  define(enable_seq_timing_power, char_settings, boolean);
  define(enable_setup_hold, char_settings, boolean);
  define(export_conditional_constrained_timing, char_settings, boolean);
  define(headroom, char_settings, string);
  define(max_no_of_hidden_power_states, char_settings, integer);
  define(max_no_of_state_dependent_leakage_states_in_export, char_settings, integer);
  define(nldm_input_cap_method, char_settings, integer);
  define(nldm_input_cap_rel_target_fall, char_settings, string);
  define(nldm_input_cap_rel_target_rise, char_settings, string);
  define(nldm_input_cap_rel_trigger_fall, char_settings, string);
  define(nldm_input_cap_rel_trigger_rise, char_settings, string);
  define(random_state_dependent_leakage_amount, char_settings, integer);
  define(random_state_dependent_leakage_select, char_settings, boolean);
  define(ripple_targ, char_settings, string);
  define(ripple_targ_err, char_settings, string);
  define(sensitization_timing_power, char_settings, string);
  define(subtract_switching_power_method, char_settings, string);
  define(tran_based_leakage_pw, char_settings, string);
  define(tran_based_leakage_step_size, char_settings, string);
  define(tristate_pulling_resistance_scaling, char_settings, string);
  define(use_bisect_targ_as_abs_value, char_settings, boolean);
  define(use_pwl_supplies_for_cmb, char_settings, boolean);
  define(use_pwl_supplies_for_seq, char_settings, boolean);
  define(worst_case_settling_time, char_settings, string);
  define(accuracy_leak_tran, char_settings, string);
  define(accuracy_opt, char_settings, string);
  define(accuracy_tran, char_settings, string);
  define(ccs_timing, char_settings, boolean);
  define(custom_step_size_leak_tran, char_settings, string);
  define(custom_step_size_opt, char_settings, string);
  define(custom_step_size_tran, char_settings, string);
  define(ecsm_timing, char_settings, boolean);
  define(enable_3d_power, char_settings, boolean);
  define(enable_3d_timing, char_settings, boolean);
  define(modelcards_md5, char_settings, string);
  define(omit_dont_care_from_sensitization, char_settings, boolean);
  define(spice_tool, char_settings, string);
  define(bisection_hspice_options, char_settings, string);
  define(bisection_spectre_tolerance, char_settings, string);
  define(custom, char_settings, string);

  char_settings("export_liberty_template") {
	add_pin_cap_to_lut_indexes : "true";
  }

  char_settings("spice_execution_template") {
	spice_version : "5.5.2.C";
  }

  char_settings("spice_lookup_tables_template") {
	constrained_measure_capacitance : "min";
	input_slope_fall_level : "";
	input_slope_fall_time : "";
	input_slope_rise_level : "";
	input_slope_rise_time : "";
	power_integration_threshold : "90";
  }

  char_settings("spice_measure_template") {
	arc_sensitization_reduction_threshold : 4;
	bisect_targ : "0.05";
	bisect_targ_err : "0.001";
	bisection_itr_cnt : 20;
	clear_preset_pw_char_settings : "0,1";
	delay : "3e-09";
	enable_comb_hidden_power : "true";
	enable_comb_leakage : "true";
	enable_comb_onehot_daat_timing_power : "true";
	enable_comb_onehot_ts_timing_power : "false";
	enable_comb_timing_power : "true";
	enable_comb_tristate : "true";
	enable_hot_setup_gated : "false";
	enable_pulse_width : "true";
	enable_recovery_removal : "true";
	enable_seq_hidden_power : "true";
	enable_seq_input_cap : "true";
	enable_seq_leakage : "true";
	enable_seq_timing_power : "true";
	enable_setup_hold : "true";
	export_conditional_constrained_timing : "false";
	headroom : "1e-09";
	max_no_of_hidden_power_states : 32;
	max_no_of_state_dependent_leakage_states_in_export : 1600;
	nldm_input_cap_method : 2;
	nldm_input_cap_rel_target_fall : "50";
	nldm_input_cap_rel_target_rise : "50";
	nldm_input_cap_rel_trigger_fall : "99";
	nldm_input_cap_rel_trigger_rise : "1";
	random_state_dependent_leakage_amount : 512;
	random_state_dependent_leakage_select : "true";
	ripple_targ : "0.1";
	ripple_targ_err : "0.025";
	sensitization_timing_power : "state_binning";
	subtract_switching_power_method : "rise_cycle";
	tran_based_leakage_pw : "0.005";
	tran_based_leakage_step_size : "tPW/100";
	tristate_pulling_resistance_scaling : "20";
	use_bisect_targ_as_abs_value : "false";
	use_pwl_supplies_for_cmb : "false";
	use_pwl_supplies_for_seq : "false";
	worst_case_settling_time : "1e-08";
  }

  char_settings("spice_template") {
	accuracy_leak_tran : "standard";
	accuracy_opt : "high";
	accuracy_tran : "high";
	ccs_timing : "false";
	custom_step_size_leak_tran : "0.5*tST";
	custom_step_size_opt : "10 ps";
	custom_step_size_tran : "1 ps";
	ecsm_timing : "false";
	enable_3d_power : "false";
	enable_3d_timing : "false";
	modelcards_md5 : "7nm_SS.pm,8d9f5b3f157054e98a0770f4a1039ef5";
	omit_dont_care_from_sensitization : "true";
	spice_tool : "Smartspice";
  }

  char_settings("spice_user_string_template") {
	bisection_hspice_options : "relin=10m relout=BISECT_TARG_ERR itropt=BISECT_ITR_CNT";
	bisection_spectre_tolerance : "tol = 10e-15";
	custom : "";
  }


  char_config() {
	internal_power_calculation : exclude_switching_on_rise;
	driver_waveform (all, "input_driver:rise");
	driver_waveform_rise : "input_driver:rise";
	driver_waveform_fall : "input_driver:fall";
	default_value_selection_method (all, max);
	default_value_selection_method (capacitance, average);
	capacitance_voltage_lower_threshold_pct_fall : 50.000000;
	capacitance_voltage_upper_threshold_pct_fall : 99.000000;
	capacitance_voltage_lower_threshold_pct_rise : 1.000000;
	capacitance_voltage_upper_threshold_pct_rise : 50.000000;
  }

  lu_table_template(waveform_template) {
	variable_1 : input_net_transition;
	variable_2 : normalized_voltage;
	index_1 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
	index_2 ("0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0");
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:rise";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	driver_waveform_name : "input_driver:fall";
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }

  normalized_driver_waveform (waveform_template) {
	index_1 ("0.000500, 0.003906, 0.007812, 0.015625, 0.031250, 0.062500, 0.125000, 0.250000");
	index_2 ("0, 1");
	values ( \
	  "0.000000, 0.000500", \
	  "0.000000, 0.003906", \
	  "0.000000, 0.007812", \
	  "0.000000, 0.015625", \
	  "0.000000, 0.031250", \
	  "0.000000, 0.062500", \
	  "0.000000, 0.125000", \
	  "0.000000, 0.250000" \
	);
  }



  power_lut_template (Hidden_power_clock_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_clock_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_data_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_fall_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Hidden_power_set_reset_rise_7) {
	variable_1 : input_transition_time;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  power_lut_template (Power_clock_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_clock_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_data_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_fall_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  power_lut_template (Power_set_reset_rise_7_7) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Pulse_width_clock_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_clock_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_fall_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Pulse_width_set_reset_rise_4) {
	variable_1 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Recovery_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Removal_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_hold_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_fall_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_fall_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Sr_setup_rise_rise_4_4) {
	variable_1 : constrained_pin_transition;
	variable_2 : related_pin_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040");
	index_2 ("0.0010,0.0020,0.0030,0.0040");
  }


  lu_table_template (Timing_clock_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_clock_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_data_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_fall_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Timing_set_reset_rise_7_7) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
	index_2 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_fall_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  lu_table_template (Tristate_disable_rise_7) {
	variable_1 : input_net_transition;
	index_1 ("0.0010,0.0020,0.0030,0.0040,0.0050,0.0060,0.0070");
  }


  /******************************************************************************************
   Module          	: C2MOS_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (C2MOS_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 21513.170541;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 21719.970297;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 22322.320451;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 26893.677161;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 21065.981541;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 19129.491929;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 21790.362094;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 21257.090546;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 17926.470306;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000439;
		fall_capacitance	: 0.000436;
		rise_capacitance	: 0.000442;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.010220,0.021656,0.027742,0.035173", \
				        "0.007149,0.020901,0.028537,0.037305", \
				        "0.006789,0.022271,0.031374,0.041537", \
				        "0.007243,0.025395,0.037303,0.049797");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.003651,0.000830,0.001972,0.003097", \
				        "-0.011964,-0.005621,-0.004011,-0.003103", \
				        "-0.015420,-0.008921,-0.007326,-0.006517", \
				        "-0.018416,-0.011926,-0.010785,-0.010719");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.003350,-0.010541,-0.017936,-0.026468", \
				        "0.019811,0.005531,-0.003412,-0.014489", \
				        "0.030625,0.016081,0.006673,-0.005801", \
				        "0.046862,0.031591,0.021545,0.006943");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.012067,0.004069,0.002215,0.001078", \
				        "0.023448,0.012867,0.009746,0.007728", \
				        "0.029551,0.018639,0.014986,0.012392", \
				        "0.037012,0.026278,0.022469,0.019742");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000394,0.000384,0.000392,0.000427,0.000519,0.000723,0.001151");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000212,0.000205,0.000210,0.000238,0.000321,0.000521,0.000946");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000397,0.000387,0.000395,0.000430,0.000521,0.000726,0.001152");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000209,0.000201,0.000207,0.000235,0.000318,0.000519,0.000945");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000080,0.000072,0.000071,0.000071,0.000071,0.000071,0.000071");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000064,-0.000064,-0.000064,-0.000064,-0.000065,-0.000065,-0.000065");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000066,0.000066,0.000066,0.000067,0.000067,0.000066,0.000066");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000054,-0.000061,-0.000062,-0.000062,-0.000062,-0.000062,-0.000062");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.000319;
		fall_capacitance	: 0.000318;
		rise_capacitance	: 0.000320;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.027662,0.041454,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.027693,0.038299,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000587,0.000577,0.000575,0.000582,0.000610,0.000682,0.000837");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000372,0.000364,0.000362,0.000365,0.000388,0.000452,0.000605");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000921,0.000911,0.000909,0.000916,0.000941,0.001011,0.001165");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000775,0.000765,0.000761,0.000768,0.000802,0.000886,0.001062");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000559,0.000549,0.000547,0.000554,0.000582,0.000654,0.000807");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000390,0.000383,0.000381,0.000384,0.000408,0.000471,0.000621");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.031847;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.055114,0.072062,0.084964,0.109380,0.157936,0.255420,0.449520", \
				        "0.056624,0.073568,0.086466,0.110907,0.159295,0.256373,0.450314", \
				        "0.058508,0.075445,0.088339,0.112774,0.161125,0.258081,0.451277", \
				        "0.062048,0.079008,0.091909,0.116335,0.164871,0.262347,0.456589", \
				        "0.067377,0.084304,0.097195,0.121639,0.170067,0.266834,0.460321", \
				        "0.074363,0.091314,0.104213,0.128633,0.177179,0.274664,0.468785", \
				        "0.083063,0.100021,0.112918,0.137313,0.185628,0.283062,0.477586");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.046802,0.065427,0.081547,0.113450,0.176890,0.304523,0.559466", \
				        "0.048328,0.066943,0.083078,0.114905,0.178749,0.306240,0.560312", \
				        "0.050197,0.068836,0.084942,0.116851,0.180284,0.307956,0.562910", \
				        "0.053777,0.072402,0.088523,0.120425,0.183874,0.311512,0.566457", \
				        "0.059200,0.077830,0.093960,0.125848,0.189528,0.317197,0.571954", \
				        "0.066334,0.084914,0.101050,0.132807,0.196608,0.323783,0.576823", \
				        "0.075131,0.093757,0.109874,0.141794,0.205055,0.332209,0.586721");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.009209,0.028581,0.049081,0.092284,0.180516,0.357489,0.712004", \
				        "0.009208,0.028747,0.048977,0.091851,0.180869,0.359625,0.714814", \
				        "0.009246,0.028708,0.049082,0.091549,0.180234,0.359703,0.715139", \
				        "0.009264,0.028673,0.049025,0.092269,0.180921,0.356436,0.710716", \
				        "0.009217,0.028624,0.049112,0.092234,0.180075,0.359867,0.715058", \
				        "0.009201,0.028705,0.049021,0.092282,0.180674,0.357280,0.711839", \
				        "0.009185,0.028740,0.048860,0.091425,0.179201,0.356437,0.710325");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.008661,0.035740,0.065973,0.127156,0.252453,0.498678,0.988467", \
				        "0.008697,0.035827,0.065605,0.127842,0.248634,0.495420,0.994004", \
				        "0.008609,0.035603,0.065962,0.126988,0.252495,0.498465,0.987697", \
				        "0.008656,0.035744,0.065972,0.127176,0.252409,0.498574,0.988170", \
				        "0.008574,0.035792,0.065915,0.127679,0.250863,0.495350,0.983035", \
				        "0.008725,0.035795,0.065670,0.127338,0.250438,0.499765,0.999591", \
				        "0.008769,0.035687,0.065972,0.125836,0.250904,0.501517,0.996361");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000722,0.000787,0.000794,0.000798,0.000800,0.000801,0.000801", \
				        "0.000715,0.000779,0.000787,0.000791,0.000793,0.000793,0.000793", \
				        "0.000712,0.000777,0.000784,0.000788,0.000790,0.000791,0.000791", \
				        "0.000717,0.000781,0.000789,0.000793,0.000795,0.000796,0.000796", \
				        "0.000741,0.000807,0.000814,0.000817,0.000820,0.000820,0.000820", \
				        "0.000810,0.000876,0.000884,0.000887,0.000889,0.000890,0.000890", \
				        "0.000964,0.001032,0.001039,0.001043,0.001047,0.001045,0.001045");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000694,0.000747,0.000757,0.000763,0.000785,0.000830,0.000904", \
				        "0.000688,0.000743,0.000752,0.000762,0.000782,0.000820,0.000873", \
				        "0.000686,0.000739,0.000748,0.000755,0.000777,0.000822,0.000896", \
				        "0.000689,0.000742,0.000752,0.000758,0.000781,0.000825,0.000899", \
				        "0.000713,0.000766,0.000776,0.000780,0.000809,0.000849,0.000914", \
				        "0.000776,0.000830,0.000838,0.000852,0.000865,0.000898,0.000946", \
				        "0.000926,0.000984,0.000990,0.001000,0.001017,0.001045,0.001123");
			}
		}
	}

  }


  /******************************************************************************************
   Module          	: TG_FF
   Cell Description	: Pos. edge D-Flip-Flop with drive strength X1
  *******************************************************************************************/

  cell (TG_FF) {

	ff ("IQ" , "IQN") {
		next_state         	: "D";
		clocked_on         	: "CLK";
		power_down_function	: "(!VDD | VSS)";
	}

	drive_strength	: 1;

	area               	: 0.364500;
	pg_pin(VDD) {
		voltage_name : VDD;
		pg_type      : primary_power;
	}
	pg_pin(VSS) {
		voltage_name : VSS;
		pg_type      : primary_ground;
	}

	leakage_power () {
		related_pg_pin : "VDD";
		value          : 35548.562398;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & !Q";
		value          : 30212.752623;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & !D & Q";
		value          : 37323.092090;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & !Q";
		value          : 40765.556051;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "!CLK & D & Q";
		value          : 28590.586578;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "!CLK & D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & !Q";
		value          : 31243.957059;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & !D & Q";
		value          : 39855.945163;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & !D & Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & !Q";
		value          : 43531.914187;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & !Q";
		value          : 0.000000;
	}
	leakage_power () {
		related_pg_pin : "VDD";
		when           : "CLK & D & Q";
		value          : 32864.695428;
	}
	leakage_power () {
		related_pg_pin : "VSS";
		when           : "CLK & D & Q";
		value          : 0.000000;
	}

	pin (D) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		capacitance		: 0.000439;
		fall_capacitance	: 0.000429;
		rise_capacitance	: 0.000449;

		timing () {

			related_pin        : "CLK";
			timing_type        : hold_rising;
			fall_constraint(Hold_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.005603,-0.014987,-0.018691,-0.022903", \
				        "-0.024462,-0.036347,-0.042886,-0.050622", \
				        "-0.034021,-0.047860,-0.056065,-0.066793", \
				        "-0.048116,-0.064626,-0.074677,-0.089655");
			}
			rise_constraint(Hold_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("-0.004654,-0.003058,-0.003001,-0.004012", \
				        "-0.017074,-0.014840,-0.013263,-0.013441", \
				        "-0.019759,-0.019047,-0.016507,-0.015907", \
				        "-0.019551,-0.021635,-0.018342,-0.016232");
			}
		}

		timing () {

			related_pin        : "CLK";
			timing_type        : setup_rising;
			fall_constraint(Setup_fall_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.023873,0.030620,0.037622,0.048871", \
				        "0.047217,0.052920,0.060601,0.073799", \
				        "0.061068,0.066412,0.074176,0.088719", \
				        "0.081892,0.087030,0.095063,0.111201");
			}
			rise_constraint(Setup_rise_rise_4_4) {
				index_1 ("0.001000,0.125000,0.250000,0.500000");
				index_2 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.019041,0.010643,0.009456,0.010389", \
				        "0.036820,0.026989,0.023237,0.022809", \
				        "0.044966,0.035446,0.030333,0.028619", \
				        "0.054140,0.045606,0.039434,0.035832");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000626,0.000619,0.000637,0.000684,0.000793,0.001031,0.001526");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000443,0.000437,0.000450,0.000492,0.000592,0.000820,0.001309");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000632,0.000625,0.000642,0.000688,0.000797,0.001033,0.001524");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000435,0.000429,0.000443,0.000485,0.000586,0.000817,0.001309");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & !Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000265,0.000259,0.000282,0.000333,0.000445,0.000674,0.001143");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000029,-0.000037,-0.000018,0.000030,0.000138,0.000367,0.000832");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "CLK & Q";

			fall_power(Hidden_power_data_fall_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("0.000269,0.000263,0.000285,0.000336,0.000446,0.000676,0.001143");
			}
			rise_power(Hidden_power_data_rise_7) {
				index_1 ("0.001000,0.015625,0.031250,0.062500,0.125000,0.250000,0.500000");
				values ("-0.000032,-0.000040,-0.000021,0.000027,0.000136,0.000366,0.000834");
			}

		}
	}

	pin (CLK) {
		direction		: input;
		input_signal_level		: VDD;
		input_voltage		: default_VDD_VSS_input;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		clock   		: true;
		capacitance		: 0.001117;
		fall_capacitance	: 0.001117;
		rise_capacitance	: 0.001117;

		timing () {

			related_pin        : "CLK";
			timing_type        : min_pulse_width;
			fall_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.024715,0.037660,0.063000,0.125500");
			}
			rise_constraint(Pulse_width_clock_rise_4) {
				index_1 ("0.001000,0.062500,0.125000,0.250000");
				values ("0.023112,0.033251,0.063000,0.125500");
			}
		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000584,0.000559,0.000559,0.000573,0.000615,0.000713,0.000929");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000063,0.000043,0.000040,0.000048,0.000084,0.000176,0.000385");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "!D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001011,0.000972,0.000968,0.000996,0.001081,0.001280,0.001695");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & !Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.001160,0.001136,0.001140,0.001168,0.001246,0.001410,0.001760");
			}
			rise_power(scalar) {values ("0.0");
			}

		}

		internal_power () {

			related_pg_pin : "VDD";
			when          	: "D & Q";

			fall_power(Hidden_power_clock_fall_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("0.000581,0.000558,0.000558,0.000573,0.000616,0.000716,0.000932");
			}
			rise_power(Hidden_power_clock_rise_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				values ("-0.000020,-0.000039,-0.000041,-0.000032,0.000005,0.000098,0.000308");
			}

		}
	}

	pin (Q) {
		direction		: output;
		output_voltage		: default_VDD_VSS_output;
		related_power_pin	: "VDD";
		related_ground_pin	: "VSS";
		max_capacitance		: 0.032033;
		function		: "IQ";
		power_down_function	: "(!VDD | VSS)";

		timing () {

			related_pin        : "CLK";
			timing_type        : rising_edge;
			timing_sense       : non_unate;

			cell_fall(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.021983,0.036195,0.048430,0.072647,0.121010,0.217742,0.410750", \
				        "0.023257,0.037474,0.049700,0.073923,0.122353,0.218907,0.412294", \
				        "0.024997,0.039220,0.051450,0.075634,0.124099,0.220303,0.414083", \
				        "0.027809,0.042035,0.054276,0.078404,0.126673,0.223478,0.416049", \
				        "0.031279,0.045535,0.057810,0.082019,0.130376,0.227114,0.419486", \
				        "0.036044,0.050409,0.062654,0.086777,0.135049,0.231686,0.425021", \
				        "0.041614,0.056201,0.068482,0.092588,0.140949,0.237096,0.430150");
			}
			cell_rise(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.029778,0.046879,0.062858,0.094550,0.157922,0.285264,0.539632", \
				        "0.031258,0.048351,0.064312,0.096116,0.159722,0.286929,0.539563", \
				        "0.033192,0.050293,0.066281,0.097997,0.161456,0.288580,0.543101", \
				        "0.037089,0.054192,0.070166,0.101860,0.165257,0.292644,0.546852", \
				        "0.043280,0.060335,0.076327,0.108127,0.171432,0.298389,0.553069", \
				        "0.050373,0.067457,0.083401,0.115218,0.178875,0.305953,0.558699", \
				        "0.057923,0.075027,0.090994,0.122706,0.186023,0.313151,0.567498");
			}
			fall_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.005402,0.025124,0.046312,0.090559,0.178639,0.355412,0.706739", \
				        "0.005423,0.025127,0.046420,0.090658,0.178260,0.355913,0.704666", \
				        "0.005421,0.025062,0.046639,0.090654,0.178637,0.355768,0.707187", \
				        "0.005468,0.025029,0.046640,0.090198,0.178931,0.354632,0.708577", \
				        "0.005554,0.025163,0.046426,0.090673,0.178924,0.352289,0.708336", \
				        "0.005737,0.025214,0.046509,0.089913,0.178207,0.355300,0.706831", \
				        "0.006150,0.025495,0.046588,0.090261,0.176548,0.352877,0.703313");
			}
			rise_transition(Timing_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.006422,0.033909,0.064474,0.125159,0.250105,0.497823,0.981279", \
				        "0.006386,0.034037,0.064535,0.126347,0.250550,0.491932,0.992792", \
				        "0.006409,0.033870,0.064385,0.125284,0.249734,0.498445,0.981159", \
				        "0.006399,0.033924,0.064497,0.125339,0.250366,0.497240,0.983516", \
				        "0.006279,0.034038,0.064436,0.126556,0.250106,0.498574,0.982588", \
				        "0.006349,0.033874,0.064102,0.125718,0.248368,0.492760,0.994274", \
				        "0.006458,0.033918,0.064444,0.124991,0.248450,0.497627,0.992124");
			}
		}

		internal_power () {

			related_pin	         : "CLK";
			related_pg_pin : "VDD";
			fall_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000453,0.000563,0.000571,0.000577,0.000580,0.000583,0.000584", \
				        "0.000421,0.000533,0.000541,0.000546,0.000550,0.000553,0.000554", \
				        "0.000412,0.000526,0.000534,0.000540,0.000543,0.000546,0.000547", \
				        "0.000426,0.000542,0.000551,0.000556,0.000560,0.000562,0.000564", \
				        "0.000494,0.000611,0.000622,0.000628,0.000635,0.000634,0.000636", \
				        "0.000679,0.000788,0.000797,0.000806,0.000811,0.000814,0.000815", \
				        "0.000998,0.001150,0.001163,0.001160,0.001171,0.001174,0.001178");
			}
			rise_power(Power_clock_rise_7_7) {
				index_1 ("0.001000,0.0078125,0.015625,0.031250,0.062500,0.125000,0.250000");
				index_2 ("0.000100,0.003125,0.006250,0.012500,0.025000,0.050000,0.100000");
				values ("0.000712,0.000802,0.000813,0.000820,0.000846,0.000848,0.000922", \
				        "0.000697,0.000790,0.000800,0.000811,0.000817,0.000848,0.000925", \
				        "0.000700,0.000791,0.000800,0.000806,0.000833,0.000840,0.000901", \
				        "0.000721,0.000812,0.000822,0.000830,0.000854,0.000852,0.000937", \
				        "0.000782,0.000875,0.000884,0.000895,0.000911,0.000934,0.000993", \
				        "0.000941,0.001014,0.001023,0.001028,0.001054,0.001080,0.001139", \
				        "0.001246,0.001345,0.001340,0.001335,0.001354,0.001396,0.001395");
			}
		}
	}

  }

}
/*
* End of file
*/
